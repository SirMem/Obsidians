<?xml version="1.0" encoding="UTF-8"?><xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve"><fields/><annots><underline page="36" rect="215.980,547.865,278.914,556.389" color="#A6A1E6" flags="print" name="d423eca8-fe50-c646-fb99-2bcf61796f9f" title="Guest" subject="下划线" date="D:20240328082801+08'00'" creationdate="D:20240328082801+08'00'" coords="215.98019999999997,556.2655000000002,278.8974,556.3885000000001,215.99649999999997,547.8654999999999,278.9137,547.9884999999999"><contents>统内在的概念</contents></underline><underline page="36" rect="26.261,427.494,436.888,451.816" color="#A6A1E6" flags="print" name="0b38bbd3-ea48-e930-73c1-1e7e8888e49d" title="Guest" subject="下划线" date="D:20240328082838+08'00'" creationdate="D:20240328082838+08'00'" coords="310.6918,451.56960000000004,436.87179999999995,451.8156,310.7081,443.16959999999995,436.88809999999995,443.4155999999999,26.261098399818028,435.89492463365434,88.43549842608843,436.01611115571006,26.2774,427.49409999999995,88.4518000262704,427.61528652205567"><contents>充分利用现代处理器和存储
器系统的设计</contents></underline><underline page="36" rect="25.652,122.692,436.999,146.786" color="#A6A1E6" flags="print" name="c02cc74d-2274-32a0-ee00-7a7d24694a85" title="Guest" subject="下划线" date="D:20240328082923+08'00'" creationdate="D:20240328082923+08'00'" coords="231.42299999999997,146.38430000000017,436.98299999999995,146.78629999999998,231.43929999999997,137.98430000000008,436.99929999999995,138.3863,25.651799999999998,131.09180000000003,256.62239999999997,131.5426000000001,25.6681,122.69180000000006,256.6387,123.14260000000002"><contents>。我们将沿着这个程序的生命周期，简要地介
绍一些逐步出现的关键概念、专业术语和组成部分。</contents></underline><squiggly page="36" rect="108.030,96.932,171.648,106.656" color="#E44234" flags="print" name="5d8abd4f-12ae-daa2-e1d4-e6cb880e3a92" title="Guest" subject="曲线" date="D:20240328082947+08'00'" creationdate="D:20240328082947+08'00'" coords="108.02969999999999,106.53240000000005,171.6297,106.65640000000008,108.04830000000001,96.93240000000003,171.6483,97.05640000000005"><contents>位＋上下文</contents></squiggly><underline page="37" rect="51.370,380.170,461.770,403.200" color="#A6A1E6" flags="print" name="0cbeff7c-7f1c-879e-d224-0b3608a05ece" title="Guest" subject="下划线" date="D:20240328083239+08'00'" creationdate="D:20240328083239+08'00'" coords="363.84000000000003,403.20000000000005,461.77,403.20000000000005,363.84000000000003,395.04,461.77,395.04,51.37,388.33000000000004,306.96000000000004,388.33000000000004,51.37,380.17,306.96000000000004,380.17"><contents>只由 ASCII 字符构成
的文件称为文本文件，所有其他文件都称为二进制文件 。</contents></underline><underline page="37" rect="50.400,350.400,461.040,373.450" color="#A6A1E6" flags="print" name="774365e4-baa2-14fd-f610-efc7ed8691cd" title="Guest" subject="下划线" date="D:20240328083303+08'00'" creationdate="D:20240328083303+08'00'" coords="272.0355,373.45,461.03999999999996,373.45,272.0355,365.28999999999996,461.03999999999996,365.28999999999996,50.4,358.79999999999995,450.7452,358.79999999999995,50.4,350.4,450.7452,350.4"><contents>系统中所有的信息 包括磁盘文件、内
存中的程序、内存中存放的用户数据以及网络上传送的数据，都是由一串比特表示的。</contents></underline><underline page="38" rect="27.008,413.825,436.678,437.905" color="#A6A1E6" flags="print" name="ccdd81ba-97dd-debe-411a-20b56c12a423" title="Guest" subject="下划线" date="D:20240328083546+08'00'" creationdate="D:20240328083546+08'00'" coords="163.53989999999996,437.3721,436.66209999999995,437.9051,163.55569999999997,429.2120999999999,436.67789999999997,429.7450999999999,27.008099999999995,421.9855,333.9681,422.5855,27.0239,413.82549999999986,333.9839,414.4254999999999"><contents>这些指令按照一种称为可执行目标程序的格式打好包，并以
二进制磁盘文件的形式存放起来。目标程序也称为可执行目标文件。</contents></underline><underline page="38" rect="278.440,336.066,415.746,344.495" color="#A6A1E6" flags="print" name="b76a87a1-c75b-a14d-2b2c-9f8a3166d192" title="Guest" subject="下划线" date="D:20240328083701+08'00'" creationdate="D:20240328083701+08'00'" coords="278.4397978961384,344.2276909725253,415.73019755749164,344.495461447377,278.4556008335222,336.0661739439033,415.7460004948755,336.33394441875504"><contents>编译系统(compilation system)</contents></underline><square page="38" rect="19.840,249.630,451.380,333.100" color="#007A3B" flags="print" name="813ab502-b9d2-18fd-10cb-b77f892ceb55" title="Guest" subject="矩形" date="D:20240328083719+08'00'" creationdate="D:20240328083715+08'00'"/><underline page="38" rect="55.946,189.721,437.333,227.907" color="#A6A1E6" flags="print" name="7eec9577-ef4d-1a02-6c62-1fe7c92df1ef" title="Guest" subject="下划线" date="D:20240328083857+08'00'" creationdate="D:20240328083857+08'00'" coords="55.945799180733424,227.1617231148798,201.1457995513374,227.44493171435397,55.96160028340365,219.0011536345691,201.16160065400763,219.28436223404327,206.59597479999996,227.37760000000003,246.86954519999995,227.45621630000005,206.61539319999997,217.33359999999993,246.88896359999995,217.41221629999995,249.8657978936181,227.54118785292263,437.31729999999993,227.90679999999998,249.8816001336451,219.38003097820967,437.33310224002696,219.74564312528702,56.454198206401465,212.5232263141744,437.0940997913351,213.26560776621795,56.470001942935525,204.3612965598669,437.10990352786916,205.10367801191046,56.00249995700253,197.88132220628972,167.84249957437737,198.10021981521913,56.018300382625135,189.72110239107064,167.85829999999999,189.94000000000005"><contents>hello . c 中第 1 行的五nclude &lt;stdio. h&gt; 命令告诉预处理器读取系统头文件
stdio.h 的内容，并把它直接插入程序文本中。结果就得到了另一个 C 程序，通常
是以 .i 作为文件扩展名。</contents></underline><underline page="39" rect="83.280,592.570,464.880,631.241" color="#A6A1E6" flags="print" name="3aae8b92-983f-2877-1409-0c8d75bc6254" title="Guest" subject="下划线" date="D:20240328083936+08'00'" creationdate="D:20240328083936+08'00'" coords="124,631.2411999999999,464.1608,631.2411999999999,124,620.7507999999999,464.1608,620.7507999999999,83.28,615.6099999999999,464.88,615.6099999999999,83.28,607.4499999999999,464.88,607.4499999999999,83.76,600.73,426.01000000000005,600.73,83.76,592.57,426.01000000000005,592.57"><contents>可重定位目标程序 (relocatable object program) 的格式，并将结果保存在目标
文件 hello.o 中。 hello.o 文件是一个二进制文件，它包含的 17 个字节是函数 main
的指令编码 。 如果我们在文本编辑器中打开 hello.o 文件，将看到一堆乱码 。</contents></underline><underline page="39" rect="83.040,547.680,463.680,570.720" color="#A6A1E6" flags="print" name="e981313d-f64f-720e-2615-c40932204756" title="Guest" subject="下划线" date="D:20240328084115+08'00'" creationdate="D:20240328084115+08'00'" coords="203.04,570.7199999999999,463.68,570.7199999999999,203.04,562.8,463.68,562.8,83.04,555.84,447.36,555.84,83.04,547.6800000000001,447.36,547.6800000000001"><contents>printf 函数存在于一个名为 printf.o 的单独的预编译
好了的目标文件中，而这个文件必须以某种方式合并到我们的 he荨o . o 程序中 。</contents></underline><underline page="39" rect="82.560,227.072,145.921,238.054" color="#A6A1E6" flags="print" name="b425a6bd-ff3f-655f-1d32-09912460d810" title="Guest" subject="下划线" date="D:20240328084317+08'00'" creationdate="D:20240328084317+08'00'" coords="82.56,238.05449999999996,145.92060000000004,238.05449999999996,82.56,227.0725,145.92060000000004,227.0725"><contents>优化程序性能</contents></underline><underline page="39" rect="82.320,139.680,462.960,192.970" color="#A6A1E6" flags="print" name="42c3d63b-093b-89ab-e111-b95af94064b5" title="Guest" subject="下划线" date="D:20240328084402+08'00'" creationdate="D:20240328084402+08'00'" coords="174.13739999999999,192.97000000000003,462.73,192.97000000000003,174.13739999999999,184.56999999999994,462.73,184.56999999999994,82.32,177.84000000000003,462.73130000000003,177.84000000000003,82.32,169.68000000000006,462.73130000000003,169.68000000000006,82.32,162.97000000000003,462.96000000000004,162.97000000000003,82.32,154.56999999999994,462.96000000000004,154.56999999999994,82.32,148.08000000000004,308.3612,148.08000000000004,82.32,139.68000000000006,308.3612,139.68000000000006"><contents>比如，一个 switch 语句是否总是比一系列的辽-else 语旬高效
得多？一个函数调用的开销有多大? while 循环比 for 循环更有效吗？指针引用比数
组索引更有效吗？为什么将循环求和的结果放到一个本地变量中，会比将其放到一个
通过引用传递过来的参数中，运行起来快很多呢？</contents></underline><underline page="40" rect="54,634.570,434.642,658.080" color="#A6A1E6" flags="print" name="835c1041-f727-606d-e927-3117661976c1" title="Guest" subject="下划线" date="D:20240328084517+08'00'" creationdate="D:20240328084517+08'00'" coords="255.56199999999995,658.08,434.64169999999996,658.08,255.56199999999995,649.6800000000001,434.64169999999996,649.6800000000001,54,642.97,318.5,642.97,54,634.57,318.5,634.57"><contents>一些最令人困扰的程序错误往往都与链
接器操作有关，尤其是当你试图构建大型的软件系统时。</contents></underline><underline page="40" rect="54,574.330,434.880,612.970" color="#A6A1E6" flags="print" name="ac85aea6-05ed-89e9-1b6d-b7ff0deeebef" title="Guest" subject="下划线" date="D:20240328084533+08'00'" creationdate="D:20240328084533+08'00'" coords="329.09299999999996,612.97,434.40299999999996,612.97,329.09299999999996,604.57,434.40299999999996,604.57,54,597.85,434.88,597.85,54,589.21,434.88,589.21,54,582.4899999999999,178.66320000000002,582.4899999999999,54,574.3299999999999,178.66320000000002,574.3299999999999"><contents>静态库和动态库的区别
是什么？我们在命令行上排列库的顺序有什么影响？最严重的是，为什么有些链接
错误直到运行时才会出现？</contents></underline><underline page="40" rect="54,483.360,434.401,507.130" color="#A6A1E6" flags="print" name="1afc2337-69de-d8ea-b5eb-50e8e098bc89" title="Guest" subject="下划线" date="D:20240328084615+08'00'" creationdate="D:20240328084615+08'00'" coords="65.2667,507.12999999999994,434.4012,507.12999999999994,65.2667,498.72999999999996,434.4012,498.72999999999996,54,491.76,172.8,491.76,54,483.36,172.8,483.36"><contents>描述堆栈原理和缓冲区溢出错误。我们还将学习程序员、编译器和操作系统可以
用来降低攻击威胁的方法。</contents></underline><underline page="40" rect="391.200,423.130,411.361,431.770" color="#A6A1E6" flags="print" name="ca3794bf-67da-3617-91d9-8a3e8fb724ed" title="Guest" subject="下划线" date="D:20240328084653+08'00'" creationdate="D:20240328084653+08'00'" coords="391.2,431.77,411.3605,431.77,391.2,423.13,411.3605,423.13"><contents>shell</contents></underline><underline page="40" rect="44.650,349.200,165.233,357.360" color="#A6A1E6" flags="print" name="760d8dfd-b2db-94ae-0cb2-6fb908c1125f" title="Guest" subject="下划线" date="D:20240328084733+08'00'" creationdate="D:20240328084733+08'00'" coords="44.65,357.36,165.23309999999998,357.36,44.65,349.2,165.23309999999998,349.2"><contents>shell 是一个命令行解释器</contents></underline><square page="41" rect="104.260,384.130,421.770,620.060" color="#007A3B" flags="print" name="c4bfb303-5d4a-09f9-7d63-c79003fb90dc" title="Guest" subject="矩形" date="D:20240328084846+08'00'" creationdate="D:20240328084844+08'00'"/><underline page="40" rect="24.170,261.166,141.610,273.218" color="#A6A1E6" flags="print" name="996cc4af-9c83-a571-121d-5310ebbe9127" title="Guest" subject="下划线" date="D:20240328084948+08'00'" creationdate="D:20240328084948+08'00'" coords="24.17,273.2184,141.6102,273.2184,24.17,261.1656,141.6102,261.1656"><contents>1. 4. 1 系统的硬件组成</contents></underline><underline page="42" rect="26.872,592.866,435.857,632.296" color="#A6A1E6" flags="print" name="a7f7ae17-e341-0c1a-e457-ecee19047c31" title="Guest" subject="下划线" date="D:20240328085250+08'00'" creationdate="D:20240328085250+08'00'" coords="162.64209853934477,631.7619543636853,435.33259613892665,632.2959940733449,162.6579031001831,623.5995988927522,435.34840069976497,624.1336386024118,26.871799308334246,616.1463557138155,435.8417977034765,616.9460810692628,26.887201652751845,608.2251500133325,435.85720004789414,609.0248753687797,26.900699132536168,601.2664470365733,292.3007,601.7841000000001,26.91700008473582,592.8659563324545,292.31700095219963,593.3836092958812"><contents>它们围绕着主存、寄存器文件 (register file) 和算术／逻辑单
元 (ALU)进行。寄存器文件是一个小的存储设备，由一些单个字长的寄存器组成，每个
寄存器都有唯一的名字。 ALU 计算新的数据和地址值。</contents></underline><underline page="43" rect="90.929,608.318,292.150,616.869" color="#A6A1E6" flags="print" name="035bea43-4e39-0617-d372-41e02da9ea64" title="Guest" subject="下划线" date="D:20240328085608+08'00'" creationdate="D:20240328085608+08'00'" coords="90.94530162384348,616.869231577427,292.1499007095276,616.4787641349387,90.92939950646121,608.7081449208705,292.1339985921454,608.3176774783823"><contents>直接存储器存取CDMA, 将在第 6 章中讨论</contents></underline><underline page="43" rect="48.375,305.694,459.050,344.500" color="#A6A1E6" flags="print" name="0c8a97b6-3a6b-3053-8a61-42ac66d32a3c" title="Guest" subject="下划线" date="D:20240328085805+08'00'" creationdate="D:20240328085805+08'00'" coords="69.31990048921298,344.499550305805,458.8399018968937,343.74547157963207,69.30349853744995,336.09855062229286,458.82349994513066,335.34447189611996,48.66040253220791,329.4204995482186,459.0504025781882,328.6250231456603,48.644498034293896,321.2581911848055,459.0344980802742,320.46271478224725,48.391308188784464,314.5439025459926,400.22130004012064,313.85792059017257,48.37539999999999,306.3796999999999,400.2053918513362,305.6937180441799"><contents>一旦目标文件 hello 中的代码和数据被加载到主存，处理器就开始执行 hello 程序
的 main 程序中的机器语言指令。这些指令将 "hello, world\n" 字符串中的字节从主存
复制到寄存器文件，再从寄存器文件中复制到显示设备，最终显示在屏幕上 。</contents></underline><underline page="44" rect="27.040,397.265,437.436,436.227" color="#A6A1E6" flags="print" name="0f524cc7-7ffe-fd94-7d05-d76f7c42caf0" title="Guest" subject="下划线" date="D:20240328090050+08'00'" creationdate="D:20240328090050+08'00'" coords="215.5836999999999,435.7945000000001,436.66329999999994,436.22710000000006,215.59949999999992,427.6345,436.67909999999995,428.0671,27.250899999999994,420.53600000000006,117.25089949766908,420.71225834161777,27.26630065286798,412.6156642393218,117.26630015053706,412.7919225809395,121.79044250020007,420.9724998970976,198.61045298863453,421.12249986381795,121.810137031672,410.8167805355741,198.63014752010645,410.96678050229445,202.9308996999664,420.87925430301584,437.42090000000013,421.3377,202.94630002753686,412.95908583820403,437.43630032757056,413.4175315351882,27.0397,405.6655,160.7551,405.9268,27.056,397.2654999999999,160.7714,397.5267999999999"><contents>系统设计者采用了更小更快的存储设备，称为高
速缓存存储器 (cache memory, 简称为 cache 或高速缓存），作为暂时的集结区域，存放处
理器近期可能会需要的信息。</contents></underline><underline page="44" rect="26.887,352.614,437.515,376.457" color="#A6A1E6" flags="print" name="eb033a85-414f-825b-f03d-340bcc9af9c9" title="Guest" subject="下划线" date="D:20240328090204+08'00'" creationdate="D:20240328090204+08'00'" coords="47.01789790348148,375.69548371804586,437.4988979662277,376.4573503533018,47.033700184634995,367.534305603326,437.51470024738114,368.29617223858196,26.886795491605557,360.7774283859798,364.5934972601433,361.4360150145801,26.90260299686785,352.61355225052165,364.60930476540557,353.27213887912194"><contents>一个容量为数十万到数百万字节的更大的 L2 高速缓存通过一条特殊的总线连接到处
理器。进程访问 L2 高速缓存的时间要比访问 Ll 高速缓存的时间长 5 倍，</contents></underline><underline page="44" rect="27.185,322.385,436.862,346.457" color="#A6A1E6" flags="print" name="949747e0-b22c-45b5-6d33-17de6205ba13" title="Guest" subject="下划线" date="D:20240328090215+08'00'" creationdate="D:20240328090215+08'00'" coords="152.19599843805236,345.90060328733784,436.8465979321102,346.4566634861534,152.2114005059421,337.9795398011844,436.86199999999997,338.53559999999993,27.18529854389029,330.5462520161502,111.66529853559302,330.7110563790971,27.201100028511533,322.38548527505526,111.68110002021427,322.55028963800214"><contents>Ll 和 L2 高速缓存是用一种叫做静态随机访问存储器 (SRAM)
的硬件技术实现的</contents></underline><square page="44" rect="68.670,153.240,392.480,269.160" color="#007A3B" flags="print" name="6e6a6c2d-f438-afc2-8a1e-758fb2b736f2" title="Guest" subject="矩形" date="D:20240328090404+08'00'" creationdate="D:20240328090358+08'00'"/><line page="44" rect="354.310,193.510,418.680,232.050" color="#E44234" flags="print" name="5027e73d-28ed-5837-a4d8-71f0ff468dec" title="Guest" subject="直线" date="D:20240328090412+08'00'" IT="LineArrow" creationdate="D:20240328090411+08'00'" start="355.31,194.50999999999988" end="417.68,231.0499999999999" tail="OpenArrow"/><line page="44" rect="53.180,230.360,102.110,233.930" color="#E44234" flags="print" name="cf3cbcfc-6622-768a-475b-680149d84814" title="Guest" subject="直线" date="D:20240328090416+08'00'" IT="LineArrow" creationdate="D:20240328090414+08'00'" start="101.11,232.9299999999999" end="54.18,231.3599999999999" tail="OpenArrow"/><freetext page="44" rect="17,223.160,61.739,237.650" flags="print" name="1df08e32-38b8-c5df-9414-656b42917ca9" title="Guest" subject="自由文本" date="D:20240328090449+08'00'" width="0" creationdate="D:20240328090422+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-auto-size-type&quot;:&quot;auto&quot;,&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;SRAM \&quot;]&quot;}"/><contents>SRAM</contents><contents-richtext><body><p><span style="color:#e44234">SRAM</span><span/></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace/></freetext><freetext page="44" rect="424.930,217.810,472.180,237.970" flags="print" name="7fee9b4f-b3de-3040-c185-453019d5a7c5" title="Guest" subject="自由文本" date="D:20240328090445+08'00'" width="0" creationdate="D:20240328090435+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;DRAM \&quot;]&quot;}"/><contents>DRAM</contents><contents-richtext><body><p><span style="color:#e44234">DRAM</span><span/></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace/></freetext><underline page="44" rect="25.922,107.332,437.991,131.177" color="#A6A1E6" flags="print" name="3ced48f5-f4d1-33f3-b6fb-cadbd5619e11" title="Guest" subject="下划线" date="D:20240328090529+08'00'" creationdate="D:20240328090529+08'00'" coords="217.29680000000002,130.74619999999993,437.97439999999995,131.17740000000003,217.31310000000002,122.34619999999995,437.99069999999995,122.77739999999994,25.922099999999997,115.4923,178.25910000000002,115.78930000000003,25.9379,107.33229999999992,178.27490000000003,107.62929999999994"><contents>高速缓存存储器存在的应用程序员能够利用高速缓
存将程序的性能提高一个数量级。</contents></underline><underline page="44" rect="26.552,277.494,437.419,301.577" color="#A6A1E6" flags="print" name="6471732d-265b-6f7d-a10c-63c1b6897174" title="Guest" subject="下划线" date="D:20240328090555+08'00'" creationdate="D:20240328090555+08'00'" coords="310.203,301.32820000000004,437.40299999999996,301.5766,310.2188,293.1682,437.4188,293.41659999999996,26.551799999999993,285.8941,334.2318,286.4941,26.568099999999994,277.4940999999999,334.2481,278.0940999999999"><contents>通过让高速缓存里存放可能
经常访问的数据，大部分的内存操作都能在快速的高速缓存中完成。</contents></underline><square page="45" rect="53.230,364.290,449.810,606.200" color="#007A3B" flags="print" name="a68890e6-61ca-40bf-7724-5f1090a3036c" title="Guest" subject="矩形" date="D:20240328090727+08'00'" creationdate="D:20240328090723+08'00'"/><underline page="45" rect="210.919,349.680,431.484,358.080" color="#A6A1E6" flags="print" name="d40b281e-bc3b-d25f-252b-bd7977c633d6" title="Guest" subject="下划线" date="D:20240328090855+08'00'" creationdate="D:20240328090855+08'00'" coords="210.9186,358.08,431.48400000000004,358.08,210.9186,349.68,431.48400000000004,349.68"><contents>上一层的存储器作为低一层存储器的高速缓存。</contents></underline><underline page="45" rect="51.600,200.160,255.360,223.210" color="#A6A1E6" flags="print" name="b1376c3f-4d12-a74d-c5e2-f2aba11daf0c" title="Guest" subject="下划线" date="D:20240328091057+08'00'" creationdate="D:20240328091057+08'00'" coords="136.81,223.20999999999998,255.35999999999999,223.20999999999998,136.81,215.28999999999996,255.35999999999999,215.28999999999996,51.6,208.31999999999994,235.2,208.31999999999994,51.6,200.15999999999997,235.2,200.15999999999997"><contents>shell 和 hello 程序都没有
直接访问键盘、显示器、磁盘或者主存。</contents></underline><underline page="46" rect="23.520,637.680,432.480,660.960" color="#A6A1E6" flags="print" name="58e6d275-e9f6-7126-4a26-4be55fa156e8" title="Guest" subject="下划线" date="D:20240328091319+08'00'" creationdate="D:20240328091319+08'00'" coords="23.52,660.9599999999999,432.48,660.9599999999999,23.52,652.8,432.48,652.8,23.52,645.84,166.68,645.84,23.52,637.6800000000001,166.68,637.6800000000001"><contents>I/0 设备的抽象表示，虚拟内存是对主存和磁盘 I/0 设备的抽象表示，进程则是对处理
器、主存和 I/0 设备的抽象表示</contents></underline><underline page="46" rect="21.120,170.400,432.491,223.680" color="#A6A1E6" flags="print" name="8f32df0f-eb63-849c-e44b-632696883f9d" title="Guest" subject="下划线" date="D:20240328091436+08'00'" creationdate="D:20240328091436+08'00'" coords="237.2625,223.68,432.003,223.68,237.2625,215.51999999999998,432.003,215.51999999999998,21.36,208.79999999999995,432.49089999999995,208.79999999999995,21.36,200.39999999999998,432.49089999999995,200.39999999999998,21.36,193.69000000000005,432.47999999999996,193.69000000000005,21.36,185.28999999999996,432.47999999999996,185.28999999999996,21.12,178.55999999999995,421.6818,178.55999999999995,21.12,170.39999999999998,421.6818,170.39999999999998"><contents>操作系统会提供一种假象，就好像系统上只
有这个程序在运行。程序看上去是独占地使用处理器、主存和 I/0 设备。处理器看上去就像
在不间断地一条接一条地执行程序中的指令，即该程序的代码和数据是系统内存中唯一的对
象。这些假象是通过进程的概念来实现的，进程是计算机科学中最重要和最成功的概念之一。</contents></underline><underline page="46" rect="20.880,125.280,431.770,148.800" color="#A6A1E6" flags="print" name="9bcb7746-25c0-43f8-8b89-e931aa4d03e4" title="Guest" subject="下划线" date="D:20240328093229+08'00'" creationdate="D:20240328093229+08'00'" coords="241.57950000000002,148.79999999999995,431.77,148.79999999999995,241.57950000000002,140.39999999999998,431.77,140.39999999999998,20.88,133.44000000000005,157.84020000000004,133.44000000000005,20.88,125.27999999999997,157.84020000000004,125.27999999999997"><contents>并发运行，则是说一个进程的指令和另一
个进程的指令是交错执行的。</contents></underline><underline page="46" rect="21.600,65.520,431.761,88.320" color="#A6A1E6" flags="print" name="61057e18-7240-84d2-7aa4-182b994ebd39" title="Guest" subject="下划线" date="D:20240328093257+08'00'" creationdate="D:20240328093257+08'00'" coords="84.0924,88.31999999999994,431.7606,88.31999999999994,84.0924,80.15999999999997,431.7606,80.15999999999997,21.6,73.44000000000005,63.61160000000001,73.44000000000005,21.6,65.51999999999998,63.61160000000001,65.51999999999998"><contents>过处理器在进程间切换来实现的。操作系统实现这种交错执行的机制称为上
下文切换</contents></underline><underline page="47" rect="117.360,636,324.597,644.400" color="#A6A1E6" flags="print" name="c3b02bee-cbe7-815d-ef78-f3f3d469d704" title="Guest" subject="下划线" date="D:20240328093355+08'00'" creationdate="D:20240328093355+08'00'" coords="117.36,644.4,324.597,644.4,117.36,636,324.597,636"><contents>PC 和寄存器文件的当前值，以及主存的内容</contents></underline><underline page="47" rect="198.798,606,409.752,614.400" color="#A6A1E6" flags="print" name="21549e2c-6464-8650-c26c-88bb42cb0041" title="Guest" subject="下划线" date="D:20240328093433+08'00'" creationdate="D:20240328093433+08'00'" coords="198.7978,614.4,409.75179999999995,614.4,198.7978,606,409.75179999999995,606"><contents>保存当前进程的上下文、恢复新进程的上下文</contents></underline><line page="47" rect="225.480,612.760,247.320,671.140" color="#E44234" flags="print" name="4a27550b-a72d-bd60-9425-0bbc78f55b38" title="Guest" subject="直线" date="D:20240328093438+08'00'" IT="LineArrow" creationdate="D:20240328093437+08'00'" start="226.48,613.7599999999999" end="246.32,670.1399999999999" tail="OpenArrow"/><freetext page="47" rect="249.470,666.050,366.020,687.150" flags="print" name="494abbf7-f43b-e143-9cfb-ff0b521b5599" title="Guest" subject="自由文本" date="D:20240328093459+08'00'" width="0" creationdate="D:20240328093444+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;通过什么保存 \&quot;]&quot;}"/><contents>通过什么保存</contents><contents-richtext><body><p><span>通过什么保存</span></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace/></freetext><underline page="47" rect="127.680,501.360,377.016,509.760" color="#A6A1E6" flags="print" name="a713e636-cdff-92b7-f346-e19cdd5a634e" title="Guest" subject="下划线" date="D:20240328093845+08'00'" creationdate="D:20240328093845+08'00'" coords="127.67999999999999,509.76,377.0158,509.76,127.67999999999999,501.36,377.0158,501.36"><contents>hello 进程终止后，操作系统恢复 shell 进程的上下文</contents></underline><underline page="47" rect="93.918,531.360,430.462,539.760" color="#A6A1E6" flags="print" name="6f1888a7-cde6-88dd-2fba-c0a138ae4beb" title="Guest" subject="下划线" date="D:20240328093908+08'00'" creationdate="D:20240328093908+08'00'" coords="93.91799999999999,539.7599999999999,430.462,539.7599999999999,93.91799999999999,531.3599999999999,430.462,531.3599999999999"><contents>即系统调用，来执行我们的请求，系统调用会将控制权传递给操作系统。</contents></underline><underline page="47" rect="51.370,168.490,462.241,207.130" color="#A6A1E6" flags="print" name="4b1300d0-d2b4-1174-434f-f48cb5b405af" title="Guest" subject="下划线" date="D:20240328094003+08'00'" creationdate="D:20240328094003+08'00'" coords="293.7996,207.13,462.24119999999994,207.13,293.7996,198.49,462.24119999999994,198.49,51.6,191.76999999999998,462.0009,191.76999999999998,51.6,183.37,462.0009,183.37,51.37,176.89,137.8716,176.89,51.37,168.49,137.8716,168.49"><contents>但是在现代系统中，一个进程实际上
可以由多个称为线程的执行单元组成，每个线程都运行在进程的上下文中，并共享同样的
代码和全局数据。</contents></underline><underline page="47" rect="73.437,153.370,289.311,162.010" color="#A6A1E6" flags="print" name="8c210537-b40a-69ec-5b8a-39836d6b2e8f" title="Guest" subject="下划线" date="D:20240328094131+08'00'" creationdate="D:20240328094131+08'00'" coords="73.4374,162.01,289.3114,162.01,73.4374,153.37,289.3114,153.37"><contents>因为多线程之间比多进程之间更容易共享数据</contents></underline><underline page="47" rect="72.429,138.490,430.425,147.130" color="#A6A1E6" flags="print" name="fcccdb91-fd74-633c-a51d-9103b2f10302" title="Guest" subject="下划线" date="D:20240328094150+08'00'" creationdate="D:20240328094150+08'00'" coords="72.42859999999999,147.13,430.4248,147.13,72.42859999999999,138.49,430.4248,138.49"><contents>当有多处理器可用的时候，多线程也是一种使得程序可以运行得更快的方法，</contents></underline><underline page="47" rect="52.080,48.720,462.483,71.760" color="#A6A1E6" flags="print" name="a7d73f89-236f-f779-795e-62441e8b09f4" title="Guest" subject="下划线" date="D:20240328094223+08'00'" creationdate="D:20240328094223+08'00'" coords="72.96000000000001,71.75999999999999,462.4828,71.75999999999999,72.96000000000001,63.60000000000002,462.4828,63.60000000000002,52.08,56.639999999999986,82.60289999999998,56.639999999999986,52.08,48.72000000000003,82.60289999999998,48.72000000000003"><contents>虚拟内存是一个抽象概念，它为每个进程提供了一个假象，即每个进程都在独占地使用
主存。</contents></underline><underline page="48" rect="190.917,621.600,319.845,629.760" color="#A6A1E6" flags="print" name="2cd12154-ae16-c765-3a9f-43e684efafc6" title="Guest" subject="下划线" date="D:20240328094307+08'00'" creationdate="D:20240328094307+08'00'" coords="190.9175,629.76,319.845,629.76,190.9175,621.6,319.845,621.6"><contents>图中的地址是从下往上增大的</contents></underline><underline page="48" rect="188.219,356.890,272.596,365.290" color="#A6A1E6" flags="print" name="2f4b903f-4636-8134-7955-29a3757820b4" title="Guest" subject="下划线" date="D:20240328094334+08'00'" creationdate="D:20240328094334+08'00'" coords="188.21939999999998,365.28999999999996,272.59619999999995,365.28999999999996,188.21939999999998,356.89,272.59619999999995,356.89"><contents>大量准确定义的区</contents></underline><underline page="48" rect="49.690,282,430.321,320.364" color="#A6A1E6" flags="print" name="6e9b072b-6238-5193-99f4-0aae823e4803" title="Guest" subject="下划线" date="D:20240328094445+08'00'" creationdate="D:20240328094445+08'00'" coords="227.77230000000003,320.36449999999996,430.3211,320.36449999999996,227.77230000000003,309.3825,430.3211,309.3825,49.690000000000005,305.29,430.32,305.29,49.690000000000005,297.13,430.32,297.13,49.690000000000005,290.4,249.51999999999998,290.4,49.690000000000005,282,249.51999999999998,282"><contents>代码是从同一固定地址开始，紧接着的是和
C 全局变量相对应的数据位置。代码和数据区是直接按照可执行目标文件的内容初
始化的，在示例中就是可执行文件 hello。</contents></underline><square page="48" rect="62.370,371.850,394.050,616.590" color="#007A3B" flags="print" name="66ea64fd-a6e6-a69b-a0bc-1379dc408a68" title="Guest" subject="矩形" date="D:20240328094510+08'00'" creationdate="D:20240328094507+08'00'"/><underline page="49" rect="54.183,632.749,465.532,656.835" color="#A6A1E6" flags="print" name="ee7028e1-26f3-dbe6-e5e9-bfa04f59eec5" title="Guest" subject="下划线" date="D:20240328094649+08'00'" creationdate="D:20240328094649+08'00'" coords="167.8835,656.2520999999999,465.5163,656.835,167.89929999999998,648.0920999999998,465.5321,648.6749999999998,54.183499999999995,641.1495000000001,136.40750000000008,641.3103000000001,54.199799999999996,632.7494999999999,136.42380000000009,632.9102999999999"><contents>硬件和操作系统软件之间精密复杂的交互，包括对处理器生成的每
个地址的硬件翻译</contents></underline><underline page="49" rect="54.213,617.869,465.320,641.954" color="#A6A1E6" flags="print" name="9663d580-362f-7a75-fc55-d5501d924c2f" title="Guest" subject="下划线" date="D:20240328094734+08'00'" creationdate="D:20240328094734+08'00'" coords="228.90949999999998,641.4912,465.3034999999999,641.9535000000001,228.92579999999998,633.0911999999998,465.3197999999999,633.5534999999999,54.21280000000001,626.0294,124.9597,626.1673000000001,54.22860000000001,617.8693999999998,124.97550000000001,618.0072999999999"><contents>进程虚拟内存的内容存储在磁盘上，然后用主存作为
磁盘的高速缓存</contents></underline><underline page="49" rect="212.755,54.657,402.589,63.188" color="#A6A1E6" flags="print" name="4c6ccccb-3b70-f057-770e-659019bd82d0" title="Guest" subject="下划线" date="D:20240328094835+08'00'" creationdate="D:20240328094835+08'00'" coords="212.75489898300455,62.817426729850354,402.57349964818997,63.188486448851336,212.7707003056109,54.65674366227131,402.58930097079633,55.02780338127229"><contents>系统视为一个孤立的硬件和软件的集合体</contents></underline><underline page="50" rect="21.292,623.566,430.028,662.523" color="#A6A1E6" flags="print" name="47940ae4-1e4c-230c-e052-bceb803c015f" title="Guest" subject="下划线" date="D:20240328094851+08'00'" creationdate="D:20240328094851+08'00'" coords="232.46349881401895,662.1378134561952,429.99349976282423,662.5230224908084,232.47930025878168,653.9770673002541,430.009301207587,654.3622763348674,21.29239878000722,646.8458300722216,430.0124,647.6425999999999,21.308200187374755,638.6851032292425,430.0282014073676,639.4818731570209,21.5612,631.9657000000001,262.46090000000004,632.4372000000001,21.5775,623.5656999999999,262.47720000000004,624.0372"><contents>从一个单独的系统来看，网络可视为一个
I /0 设备，如图 1-14 所示。当系统从主存复制一串字节到网络适配器时，数据流经过网络
到达另一台机器，而不是比如说到达本地磁盘驱动器</contents></underline><underline page="51" rect="52.513,458.660,463.910,481.139" color="#A6A1E6" flags="print" name="9b4ba674-797a-b4d8-fed9-f2cef8487de1" title="Guest" subject="下划线" date="D:20240328095119+08'00'" creationdate="D:20240328095119+08'00'" coords="400.66089999999997,481.1386,463.91049999999996,481.0162,400.6445,472.7385999999999,463.8941,472.61619999999994,52.5295,467.1823,115.5625,467.05989999999997,52.513099999999994,458.7822999999999,115.54610000000002,458.6598999999999"><contents>该部分的重要
性和加速程度</contents></underline><underline page="52" rect="23.252,370.607,434.369,394.452" color="#A6A1E6" flags="print" name="1888b8d8-4df2-fef8-f8d8-fb3f01852f0e" title="Guest" subject="下划线" date="D:20240328095441+08'00'" creationdate="D:20240328095441+08'00'" coords="127.3299999594281,393.85152502468634,434.3532998988565,394.4516522361572,127.34580083790283,385.6910713314087,434.3691007773312,386.29119854287956,23.251898762984126,378.7686388638856,423.41929999999996,379.55060000000014,23.267701617340986,370.6071647150324,423.4351028543568,371.38912585114696"><contents>我们用的术语并发(concurrency)是一个通用的概念，指一个同时具
有多个活动的系统；而术语并行(parallelism) 指的是用并发来使一个系统运行得更快。</contents></underline><underline page="52" rect="23.622,55.968,242.738,79.436" color="#A6A1E6" flags="print" name="8183ddf0-00cd-8f6d-e0d6-74320ac26e93" title="Guest" subject="下划线" date="D:20240328095612+08'00'" creationdate="D:20240328095612+08'00'" coords="44.23269954427542,79.04813437264102,242.72270000000006,79.43570000000011,44.24810011251127,71.1278421370622,242.7381005682359,71.5154077644213,23.6216,64.12760000000003,139.5616,64.3542000000001,23.6374,55.96759999999995,139.5774,56.19420000000002"><contents>多核处理器是将多个 CPU(称为“核")集成
到一个集成电路芯片上。</contents></underline><square page="53" rect="118.120,334.360,400.670,602.100" color="#007A3B" flags="print" name="3c62a15e-b515-4d16-313a-9d117aa61543" title="Guest" subject="矩形" date="D:20240328095649+08'00'" creationdate="D:20240328095646+08'00'"/><underline page="52" rect="56.940,325.554,107.355,333.572" color="#A6A1E6" flags="print" name="89dd8eef-455f-e345-756e-f6e3da71dba0" title="Guest" subject="下划线" date="D:20240328095748+08'00'" creationdate="D:20240328095748+08'00'" coords="56.9397,333.4737,107.3397,333.5722,56.9551,325.5537,107.3551,325.6522"><contents>线程级并发</contents></underline><underline page="52" rect="24.504,432.271,118.438,444.842" color="#A6A1E6" flags="print" name="6e27ef0f-2fe6-a522-a312-6519f39dca86" title="Guest" subject="下划线" date="D:20240328095826+08'00'" creationdate="D:20240328095826+08'00'" coords="24.504137902549285,444.6586487250644,118.4142277084451,444.8422922321603,24.528134390977275,432.27095864308967,118.4382241968731,432.45460215018556"><contents>1. 9. 2 井发和并行</contents></underline><underline page="54" rect="24.480,545.520,434.880,568.570" color="#A6A1E6" flags="print" name="48a9ee2b-921e-0a86-e23c-4351c33e7bec" title="Guest" subject="下划线" date="D:20240328095850+08'00'" creationdate="D:20240328095850+08'00'" coords="44.4,568.5699999999999,434.8803,568.5699999999999,44.4,560.65,434.8803,560.65,24.479999999999997,553.92,95.4212,553.92,24.479999999999997,545.52,95.4212,545.52"><contents>如果处理器可以达到比一个周期一条指令更快的执行速率，就称之为超标量 (super­
scalar)处理器。</contents></underline><underline page="54" rect="62.400,368.207,198.960,380.346" color="#A6A1E6" flags="print" name="fbe40e64-364d-ccf8-3d04-673fb85c9f61" title="Guest" subject="下划线" date="D:20240328095938+08'00'" creationdate="D:20240328095938+08'00'" coords="62.4,380.3455,198.96,380.3455,62.4,368.2075,198.96,368.2075"><contents>计算机系统中抽象的重要性</contents></underline><underline page="51" rect="53.515,521.125,152.966,532.278" color="#A6A1E6" flags="print" name="506d127a-310d-07d9-6bbe-d9830fcd54c1" title="Guest" subject="下划线" date="D:20240329082914+08'00'" creationdate="D:20240329082914+08'00'" coords="53.53670279999998,532.2782000000001,82.1543028,532.2227534,53.51496999999998,521.1805999999999,82.13257,521.1251533999998,93.20560015530242,531.6637795451531,152.96560021020514,531.5479076660461,93.18919994509729,523.2636718791072,152.9492,523.1478000000001"><contents>1. 9. 1 Amdahl 定律</contents></underline><underline page="58" rect="24.624,653.092,329.920,661.849" color="#A6A1E6" flags="print" name="544a2e20-7f62-c176-dad8-b73410b4da19" title="Guest" subject="下划线" date="D:20240329083750+08'00'" creationdate="D:20240329083750+08'00'" coords="24.62449999999999,661.2518000000001,329.9045000000001,661.8488000000001,24.6403,653.0918,329.92030000000005,653.6888"><contents>点数虽然可以编码一个较大的数值范酣，但是这种表示只是近似的。</contents></underline><underline page="58" rect="24.710,608.452,432.940,632.291" color="#A6A1E6" flags="print" name="d77a3ab7-4328-ffa4-730e-c4ce95cb0288" title="Guest" subject="下划线" date="D:20240329083805+08'00'" creationdate="D:20240329083805+08'00'" coords="286.2896,632.0038000000001,432.9242,632.2908000000001,286.3054,623.8437999999999,432.94,624.1307999999999,24.7105,616.8518,160.79059999999998,617.1170000000001,24.7268,608.4517999999998,160.80689999999998,608.7169999999999"><contents>且具有可以跨越不同机器、操作
系统和编译器组合的可移植性</contents></underline><underline page="58" rect="27.415,328.135,427.014,351.968" color="#A6A1E6" flags="print" name="1d08cea8-6e69-0b13-0da6-2f96046bd60a" title="Guest" subject="下划线" date="D:20240329083957+08'00'" creationdate="D:20240329083957+08'00'" coords="237.63710000000003,351.59760000000006,426.99889999999994,351.96840000000003,237.65250000000003,343.6776,427.01429999999993,344.04839999999996,27.415099753709537,335.8161269470241,271.9750978514365,336.29480744749696,27.430001907023247,328.13501705109877,271.9900000047502,328.61369755157165"><contents>首先给出以数学形式表示的属性，作为原
理 。 然后，用例子和非形式化的讨论来解释这个原理 。</contents></underline><underline page="59" rect="43.776,229.600,454.825,254.589" color="#A6A1E6" flags="print" name="b8230eee-ca3b-6e58-a724-2a1deea83e93" title="Guest" subject="下划线" date="D:20240329084036+08'00'" creationdate="D:20240329084036+08'00'" coords="151.5406,254.5895,454.8254,254.00149999999996,151.52470000000002,246.42949999999996,454.80949999999996,245.84149999999994,43.79648253826051,240.37917060111204,77.70448241007306,240.31349714369236,43.7755016,229.6655,77.68350147181255,229.59982654258033,81.83550051878844,239.8448662461335,126.71550000004135,239.75760002121183,81.81960000000002,231.68459999999993,126.69959948125293,231.59733377507825"><contents>。机器级程序将内存视为一个非常大的字节数组，称为虚拟内存
(virtual memory) 。</contents></underline><underline page="59" rect="82.031,214.187,384.446,224.965" color="#A6A1E6" flags="print" name="66df69b6-841c-eee4-5821-abdf19889eb8" title="Guest" subject="下划线" date="D:20240329084219+08'00'" creationdate="D:20240329084219+08'00'" coords="82.04610039105447,224.71439906972967,309.5661018881352,224.27426477613307,82.03059824397691,216.7933019823522,309.5505997410577,216.35316768875555,314.26748253351514,224.96496817792843,347.3641853948151,224.90088788006926,314.2465015387,214.25126869785913,347.34320439999993,214.18718839999997,352.04610046798314,224.19113912432977,384.44610000000006,224.12810000000007,352.0305999359061,216.2708672501244,384.430599467923,216.20782812579466"><contents>所有可能地址的集合就称为虚拟地址空间 (vi rtual address space) 。</contents></underline><underline page="59" rect="42.685,95.961,454.092,119.547" color="#A6A1E6" flags="print" name="0d4cab7b-a0b3-16ab-af3e-fcb5367c74c3" title="Guest" subject="下划线" date="D:20240329084337+08'00'" creationdate="D:20240329084337+08'00'" coords="106.32070109436648,119.54726052917499,454.0915004624338,118.8734368562865,106.30429930315265,111.14634307818403,454.07509867121996,110.47251940529554,42.70109999999999,104.54989999999998,264.4611,104.1209,42.685199999999995,96.38990000000001,264.4452,95.96090000000004"><contents>C 语言中一个指针的值（无论它指向一个整数、一个结构或是某个其他程序
对象）都是某个存储块的第一个字节的虚拟地址。</contents></underline><squiggly page="59" rect="267.314,50.785,297.973,59.004" color="#E44234" flags="print" name="c6159cf4-afb3-82b0-99de-21f6fad3fdb9" title="Guest" subject="曲线" date="D:20240329084439+08'00'" creationdate="D:20240329084439+08'00'" coords="267.3298,59.004299999999944,297.97299999999996,58.94489999999996,267.3139,50.844299999999976,297.95709999999997,50.78489999999999"><contents>字节块</contents></squiggly><squiggly page="59" rect="380.987,50.508,440.533,58.784" color="#E44234" flags="print" name="31139daa-4396-3f49-8649-bf4339bedcf9" title="Guest" subject="曲线" date="D:20240329084447+08'00'" creationdate="D:20240329084447+08'00'" coords="381.00300024425326,58.78432418600801,440.5330000937432,58.66884659638572,380.98709949358226,50.623938935977094,440.51709934307223,50.50846134635481"><contents>一个字节序列</contents></squiggly><underline page="60" rect="17.481,237.166,428.378,276.359" color="#A6A1E6" flags="print" name="62d0e473-d565-5189-bcc2-ce03dd49b15a" title="Guest" subject="下划线" date="D:20240329084706+08'00'" creationdate="D:20240329084706+08'00'" coords="38.331799999999994,275.5971,428.33399999999995,276.3593,38.3481,267.1970999999999,428.35029999999995,267.9592999999999,17.481099292821664,260.4466652262759,428.3617992144907,261.2480056807123,17.496900078330892,252.2862595455636,428.3775999999999,253.08759999999995,17.5104,245.32630000000006,79.76940000000002,245.44810000000007,17.526200000000003,237.16629999999998,79.7852,237.2881"><contents>编写机器级程序的一个常见任务就是在位模式的十进制、二进制和十六进制表示之间
人工转换。二进制和十六进制之间的转换比较简单直接，因为可以一次执行一个十六进制
数字的转换。</contents></underline><underline page="62" rect="20.160,394.800,427.922,418.080" color="#A6A1E6" flags="print" name="6b8a2702-911e-6c8f-72f6-35543c754396" title="Guest" subject="下划线" date="D:20240329084929+08'00'" creationdate="D:20240329084929+08'00'" coords="208.2288,418.08,427.92240000000004,418.08,208.2288,409.68,427.92240000000004,409.68,20.16,403.2,427.21,403.2,20.16,394.8,427.21,394.8"><contents>以字长决定的最重要的系统参数就是虚拟地址空
间的最大大小。也就是说，对于一个字长为 w 位的机器而言，虚拟地址的范围为 O~沪— 1,</contents></underline><underline page="64" rect="65.200,644.771,143.457,653.564" color="#A6A1E6" flags="print" name="a1553e6a-8068-0311-af3d-edb2b7b0cae0" title="Guest" subject="下划线" date="D:20240329090303+08'00'" creationdate="D:20240329090303+08'00'" coords="65.19980000000001,653.4110000000003,143.4402,653.5636000000003,65.21650000000001,644.7710000000001,143.45690000000002,644.9236000000001"><contents>寻址和字节顺序</contents></underline><underline page="64" rect="26.688,455.574,436.805,510.376" color="#A6A1E6" flags="print" name="1b478dac-d023-c4ba-4ace-3be69bddc8ef" title="Guest" subject="下划线" date="D:20240329090517+08'00'" creationdate="D:20240329090517+08'00'" coords="280.0484,510.0701,436.5284000000001,510.3761,280.0656,501.1901,436.5456000000001,501.49609999999996,26.869099999999992,493.7355,436.7890999999999,494.53549999999996,26.884900000000002,485.5754999999999,436.8048999999999,486.3754999999999,26.89839621078805,478.6175569600839,436.3483962294093,479.4172473430564,26.91420454289635,470.4532537952937,436.36420456151757,471.2529441782662,26.687595947963104,463.4971839046806,347.8175985664528,464.12303725285534,26.7030013213875,455.57442042928,347.8330039398772,456.20027377745475"><contents>某些机器选择在内存中按照从最低
有效字节到最高有效字节的顺序存储对象，而另一些机器则按照从最高有效字节到最低有效
字节的顺序存储。前一种规则——最低有效字节在最前面的方式，称为小端法(little endian) 。
后一种规则—-—最高有效字节在最前面的方式，称为大端法 (big endian) 。</contents></underline><underline page="65" rect="48.490,354.960,459.371,393.600" color="#A6A1E6" flags="print" name="e62d6867-92c6-9441-da45-7a22c7b4fc45" title="Guest" subject="下划线" date="D:20240329090856+08'00'" creationdate="D:20240329090856+08'00'" coords="143.4279,393.59999999999997,459.1209,393.59999999999997,143.4279,385.2,459.1209,385.2,48.49,378.24,459.3706,378.24,48.49,370.08,459.3706,370.08,49.44,363.35999999999996,100.91999999999999,363.35999999999996,49.44,354.96,100.91999999999999,354.96"><contents>网络应用程序的代码编写必须遵守已建立的关千字节顺序的规则，以
确保发送方机器将它的内部表示转换成网络标准，而接收方机器则将网络标准转换为它的
内部表示。</contents></underline><underline page="379" rect="86.880,138.960,221.521,149.280" color="#A6A1E6" flags="print" name="7dcfad3b-769a-42f1-5db4-54baafe32ef3" title="Guest" subject="下划线" date="D:20240417112953+08'00'" creationdate="D:20240417112953+08'00'" coords="86.88,149.27999999999997,221.52100000000002,149.27999999999997,86.88,138.96000000000004,221.52100000000002,138.96000000000004"><contents>用内联函数替换优化函数调用</contents></underline><underline page="380" rect="13.264,151.767,421.308,174.128" color="#A6A1E6" flags="print" name="324ceb65-0a69-1f60-17fa-7ac40422929a" title="Guest" subject="下划线" date="D:20240417113156+08'00'" creationdate="D:20240417113156+08'00'" coords="304.18810005881005,174.12793005000754,421.3082005873023,173.90140009250752,304.1725994715078,166.2076299575,421.2927,165.98109999999997,13.27989999999999,160.29160000000013,201.37270047804878,159.9273452667661,13.263999476479606,152.13133132538383,201.35679995452838,151.7670765921498"><contents>"4GHz" 处理器，这表示
处理器时钟运行频率为每秒 4Xl沪个周期</contents></underline><underline page="453" rect="51.487,550.766,458.852,590.969" color="#A6A1E6" flags="print" name="ee16d361-0cbe-4d70-b40c-3a6e3ee14949" title="Guest" subject="下划线" date="D:20240417115151+08'00'" creationdate="D:20240417115151+08'00'" coords="72.92130251025468,590.96888698225,458.8519008439382,590.2202331154456,72.90539806038215,582.8066032741004,458.83599639406566,582.0579494072961,51.53180129313432,575.8896636462949,458.813,575.0993999999998,51.51589938179287,567.7286827314343,458.7970980886586,566.9384190851392,51.50279999999999,561.0190000000002,200.55280103451716,560.7307286048947,51.48729890379593,553.0984398750893,200.5372999383131,552.8101684799838,204.06292532669724,560.7956648049114,254.01315318705196,560.6989491047857,204.04350643477116,550.8630131875509,253.99373429512588,550.7662974874252"><contents>一个编写良好的计算机程序常常具有良好的局部性 Cl ocality) 。也就是，它们倾向于引
用邻近于其他最近引用过的数据项的数据项，或者最近引用过的数据项本身。这种倾向
性，被称为局部性原理 (principle of locality)</contents></underline><underline page="453" rect="50.497,45.810,456.865,68.778" color="#A6A1E6" flags="print" name="78688752-fad8-984e-6101-9358b7e87120" title="Guest" subject="下划线" date="D:20240417115327+08'00'" creationdate="D:20240417115327+08'00'" coords="175.0658,68.77800000000002,456.8648,68.23260000000005,175.0499,60.61800000000005,456.8489,60.072599999999966,50.51320054996853,54.379282248012146,261.4832,53.97060000000022,50.49729935848211,46.21867076818137,261.4672988085136,45.80998852016944"><contents>这个函数要么有好的空间局部性，要么有好的时间局部性，所
以我们可以断定 sumvec 函数有良好的局部性。</contents></underline><underline page="454" rect="10.810,48.720,416.880,102" color="#A6A1E6" flags="print" name="c8e5563c-7d1c-5753-e03a-9ccd80bf8004" title="Guest" subject="下划线" date="D:20240417115813+08'00'" creationdate="D:20240417115813+08'00'" coords="28.08,102,416.88,102,28.08,93.60000000000002,416.88,93.60000000000002,10.81,86.88,416.40029999999996,86.88,10.81,78.72000000000003,416.40029999999996,78.72000000000003,11.52,72.00999999999999,416.6403,72.00999999999999,11.52,63.85000000000002,416.6403,63.85000000000002,10.81,56.879999999999995,92.65060000000001,56.879999999999995,10.81,48.72000000000003,92.65060000000001,48.72000000000003"><contents>因为程序指令是存放在内存中的， CPU 必须取出（读出）这些指令，所以我们也能够
评价一个程序关千取指令的局部性。例如，图 6-17 中 for 循环体里的指令是按照连续的
内存顺序执行的，因此循环有良好的空间局部性。因为循环体会被执行多次，所以它也有
很好的时间局部性。</contents></underline><underline page="457" rect="45.370,316.570,452.640,339.840" color="#A6A1E6" flags="print" name="8a4ae37e-47d7-b2ba-5f9c-0140973eb258" title="Guest" subject="下划线" date="D:20240417115944+08'00'" creationdate="D:20240417115944+08'00'" coords="209.51999999999998,339.84000000000003,452.64,339.84000000000003,209.51999999999998,331.68,452.64,331.68,45.37,324.73,220.07399999999998,324.73,45.37,316.57,220.07399999999998,316.57"><contents>对于每个 k, 位于 K 层的更快更小的存储设备作为位于
k+l 层的更大更慢的存储设备的缓存。</contents></underline><square page="453" rect="44.500,121.050,462.490,251.460" color="#007A3B" flags="print" name="f6d73f25-5bd3-9e01-3b29-a194a2bcc2ba" title="Guest" subject="矩形" date="D:20240417144202+08'00'" creationdate="D:20240417144157+08'00'"/><square page="454" rect="9.010,130.280,416.220,279.460" color="#007A3B" flags="print" name="1358eb0a-242b-c85b-486a-8dd7ad805707" title="Guest" subject="矩形" date="D:20240417144421+08'00'" creationdate="D:20240417144417+08'00'"/><square page="454" rect="7.610,362.910,419.500,513.040" color="#007A3B" flags="print" name="32f0f230-35d8-2c71-7801-07db9d4434bb" title="Guest" subject="矩形" date="D:20240417145515+08'00'" creationdate="D:20240417145512+08'00'"/><square page="456" rect="13.460,43.660,443.180,310.130" color="#007A3B" flags="print" name="f7c1c282-8b95-ce16-8398-f87d195df651" title="Guest" subject="矩形" date="D:20240417150116+08'00'" creationdate="D:20240417150113+08'00'"/><square page="457" rect="89.360,39.950,421.030,206.020" color="#007A3B" flags="print" name="98089649-1999-1a0b-6283-063af9ef6348" title="Guest" subject="矩形" date="D:20240417151325+08'00'" creationdate="D:20240417151323+08'00'"/><square page="460" rect="8.670,438.830,429.010,667.300" color="#007A3B" flags="print" name="afc4f029-2c82-c296-1d4a-5e8a79787811" title="Guest" subject="矩形" date="D:20240417153508+08'00'" creationdate="D:20240417153506+08'00'"/><underline page="475" rect="213.832,306.222,255.694,314.463" color="#A6A1E6" flags="print" name="a868062f-fe9f-bd6d-e571-11ee71908546" title="Guest" subject="下划线" date="D:20240417154203+08'00'" creationdate="D:20240417154203+08'00'" coords="213.8474,314.46310000000005,255.69379999999998,314.38190000000003,213.8315,306.3031,255.6779,306.22189999999995"><contents>少扯循环</contents></underline><square page="500" rect="6,389.970,437.110,599.180" color="#007A3B" flags="print" name="d8379f7a-59d7-cdba-40fc-b7eac51716e1" title="Guest" subject="矩形" date="D:20240417203148+08'00'" creationdate="D:20240417203141+08'00'"/><square page="500" rect="214.300,201.250,467.070,370.070" color="#007A3B" flags="print" name="80b0833d-7c99-78be-8443-1d9c5f190c89" title="Guest" subject="矩形" date="D:20240417203324+08'00'" creationdate="D:20240417203322+08'00'"/><square page="502" rect="255.590,352.760,428.950,543.360" color="#007A3B" flags="print" name="b7b98ea9-2701-024f-0c71-118edcc8b6fe" title="Guest" subject="矩形" date="D:20240417204934+08'00'" creationdate="D:20240417204932+08'00'"/><underline page="504" rect="12.970,99.120,422.650,122.640" color="#A6A1E6" flags="print" name="9c06c1a7-ecf7-0398-4f02-bf3a8181c8f3" title="Guest" subject="下划线" date="D:20240417211230+08'00'" creationdate="D:20240417211230+08'00'" coords="337.68,122.63999999999999,422.65,122.63999999999999,337.68,112.12519999999995,422.65,112.12519999999995,12.97,108.72000000000003,235.4516,108.72000000000003,12.97,99.12,235.4516,99.12"><contents>开始的 8 个条目没
有显示出来，它们是链接器内部使用的局部符号。</contents></underline><underline page="503" rect="45.654,264.508,453.488,302.071" color="#A6A1E6" flags="print" name="c1097c71-da5a-9a80-ac30-4811fccb1151" title="Guest" subject="下划线" date="D:20240418195025+08'00'" creationdate="D:20240418195025+08'00'" coords="416.28830000000005,302.07109999999994,453.4883000000001,301.99909999999994,416.2724,293.91109999999986,453.47240000000005,293.83909999999986,45.69930263640513,287.9105503538567,453.44930457138685,287.1212414420103,45.68289728693067,279.50781037913293,453.4328992219124,278.7185014672865,45.67030095179119,273.0296875028025,108.14470087133594,272.9084460450646,45.6539,264.6292,108.12829991954476,264.5079585422621"><contents>相反，编
译器在 .data 或 .bss 中为每个定义分配空间 ， 并在符号表中创建一个有唯一名字的本地
链接器符号。</contents></underline><underline page="503" rect="139.365,263.892,425.580,272.848" color="#A6A1E6" flags="print" name="58b4c48a-f79f-d8ac-8214-231b89d73da2" title="Guest" subject="下划线" date="D:20240418195231+08'00'" creationdate="D:20240418195231+08'00'" coords="139.38190083110825,272.84782531619567,425.5803000768176,272.29303934558413,139.36549870798333,264.44673786197416,425.5638979536927,263.8919518913626"><contents>假设在同一模块中的两个函数各自定义了一个静态局部变量 X:</contents></underline><underline page="504" rect="18.720,618.720,418.571,657.360" color="#A6A1E6" flags="print" name="c7f84907-e4a9-a8d1-d4e8-19007ba7443f" title="Guest" subject="下划线" date="D:20240418195311+08'00'" creationdate="D:20240418195311+08'00'" coords="374.5234,657.36,418.5706,657.36,374.5234,648.48,418.5706,648.48,19.2,641.52,418.09,641.52,19.2,633.6,418.09,633.6,18.72,626.64,302.16869999999994,626.64,18.72,618.72,302.16869999999994,618.72"><contents>任何带有
static 属性声明的全局变量或者函数都是模块私有的。类似地，任何不带 sta巨c 属
性声明的全局变量和函数都是公共的，可以被其他模块访问。</contents></underline><underline page="504" rect="14.400,566.160,423.610,589.200" color="#A6A1E6" flags="print" name="fff43adb-54a9-440e-5be8-a6d984f93285" title="Guest" subject="下划线" date="D:20240418195421+08'00'" creationdate="D:20240418195421+08'00'" coords="33.37,589.1999999999999,423.60999999999996,589.1999999999999,33.37,581.04,423.60999999999996,581.04,14.4,574.0799999999999,110.63999999999999,574.0799999999999,14.4,566.16,110.63999999999999,566.16"><contents>符号表是由汇编器构造的，使用编译器输出到汇编语言. s 文件中的符号。 .symtab 节
中包含 ELF 符号表。</contents></underline><underline page="506" rect="12.480,459.130,422.403,511.690" color="#A6A1E6" flags="print" name="b3b91971-13fe-66c0-5ab4-d0f8d16c24cd" title="Guest" subject="下划线" date="D:20240418195842+08'00'" creationdate="D:20240418195842+08'00'" coords="32.4,511.68999999999994,422.4024,511.68999999999994,32.4,503.28999999999996,422.4024,503.28999999999996,12.719999999999999,496.79999999999995,422.40329999999994,496.79999999999995,12.719999999999999,488.4,422.40329999999994,488.4,12.48,482.15999999999997,422.162,482.15999999999997,12.48,473.76,422.162,473.76,12.97,467.29,161.29,467.29,12.97,459.13,161.29,459.13"><contents>对全局符号的符号解析很棘手，还因为多个目标文件可能会定义相同名字的全局符
号。在这种情况中，链接器必须要么标志一个错误，要么以某种方法选出一个定义并抛弃
其他定义。 Linux 系统采纳的方法涉及编译器、汇编器和链接器之间的协作，这样也可能
给不警觉的程序员带来一些麻烦。</contents></underline><underline page="505" rect="99.079,90.912,265.565,99.395" color="#A6A1E6" flags="print" name="767fa673-16bf-bf7e-a71a-1d207b521df1" title="Guest" subject="下划线" date="D:20240418195855+08'00'" creationdate="D:20240418195855+08'00'" coords="99.09449999999998,99.3949,265.56489999999997,99.07170000000008,99.0786,91.23490000000004,265.549,90.9117"><contents>对全局符号的引用解析就棘手得多。</contents></underline><square page="506" rect="8.130,518.250,412.330,649.690" color="#007A3B" flags="print" name="d09778f4-8f4c-cdda-1287-59fa06ba3c79" title="Guest" subject="矩形" date="D:20240418200034+08'00'" creationdate="D:20240418200026+08'00'"/><square page="506" rect="11.050,303.740,422.210,446.220" color="#007A3B" flags="print" name="abc455ed-40fe-d21e-28e9-30a9791e92c5" title="Guest" subject="矩形" date="D:20240418200249+08'00'" creationdate="D:20240418200247+08'00'"/><underline page="510" rect="16.985,136.841,423.783,160.916" color="#A6A1E6" flags="print" name="ff58dd71-23a8-d3b1-20fb-bca25a4f0fcc" title="Guest" subject="下划线" date="D:20240418203833+08'00'" creationdate="D:20240418203833+08'00'" coords="265.75579999999997,160.60700000000008,423.7673,160.91600000000005,265.7716,152.447,423.7831,152.75599999999997,16.984899999999993,145.0005,225.72489999999996,145.40850000000012,17.0007,136.84050000000002,225.74069999999998,137.24850000000004"><contents>。相关的函数可以被编译为独立的
目标模块，然后封装成一个单独的静态库文件</contents></underline><square page="511" rect="41.870,344.680,468.740,605.220" color="#007A3B" flags="print" name="221030ac-6825-5093-7068-02783863a4e4" title="Guest" subject="矩形" date="D:20240418205507+08'00'" creationdate="D:20240418205501+08'00'"/><square page="511" rect="38.380,68.380,464.090,298.100" color="#007A3B" flags="print" name="1d5a71e5-7f7c-9fdb-4d3f-852e429f807e" title="Guest" subject="矩形" date="D:20240418205640+08'00'" creationdate="D:20240418205637+08'00'"/><square page="512" rect="5.230,302.330,433.260,586.710" color="#007A3B" flags="print" name="5332f786-08de-df9b-a2f5-c2874f01c5cb" title="Guest" subject="矩形" date="D:20240418205835+08'00'" creationdate="D:20240418205834+08'00'"/><square page="518" rect="63.870,387.070,388.870,561.160" color="#007A3B" flags="print" name="a5395368-08bb-d255-6134-cc511e3b1a33" title="Guest" subject="矩形" date="D:20240422162813+08'00'" creationdate="D:20240422162808+08'00'"/><square page="518" rect="11.830,62.100,444.690,221.530" color="#007A3B" flags="print" name="131ba98d-3f67-89a8-f79e-92332ce0b706" title="Guest" subject="矩形" date="D:20240422163227+08'00'" creationdate="D:20240422163222+08'00'"/><square page="521" rect="234.170,276.570,470.240,514.530" color="#007A3B" flags="print" name="ae4bf44b-2a7f-ee82-2ec9-1076d97222cb" title="Guest" subject="矩形" date="D:20240422170455+08'00'" creationdate="D:20240422170451+08'00'"/><square page="537" rect="234.950,223.550,465.390,413.890" color="#007A3B" flags="print" name="33500228-67d7-ec6d-8234-86193f3a1a63" title="Guest" subject="矩形" date="D:20240423202154+08'00'" creationdate="D:20240423202147+08'00'"/><square page="538" rect="229.220,342.080,445.750,506.630" color="#007A3B" flags="print" name="3c878fd9-48c7-0357-3bdf-83d7eb6d4976" title="Guest" subject="矩形" date="D:20240423203747+08'00'" creationdate="D:20240423203745+08'00'"/><square page="538" rect="63.440,247.650,385.990,327.880" color="#007A3B" flags="print" name="3b6c58e2-8ce5-c3a8-0c93-1b0d533a4b1b" title="Guest" subject="矩形" date="D:20240423203909+08'00'" creationdate="D:20240423203907+08'00'"/><square page="539" rect="37.660,470.420,462.940,605.900" color="#007A3B" flags="print" name="a07fa714-c6a9-b601-5cdd-1d8055f1306e" title="Guest" subject="矩形" date="D:20240423204127+08'00'" creationdate="D:20240423204122+08'00'"/><square page="543" rect="240.680,42.480,460.070,193.920" color="#007A3B" flags="print" name="4916eb06-1266-a6ef-2462-1691d2d2ad33" title="Guest" subject="矩形" date="D:20240423210741+08'00'" creationdate="D:20240423210739+08'00'"/><square page="545" rect="121.160,289.280,396.630,556.570" color="#007A3B" flags="print" name="96b5fe88-8162-18d2-5080-aadca01bdb2b" title="Guest" subject="矩形" date="D:20240423211651+08'00'" creationdate="D:20240423211648+08'00'"/><square page="546" rect="41.340,61.820,386.400,200.980" color="#007A3B" flags="print" name="8859982d-f7b6-3a07-ef0b-53cfb78e6d46" title="Guest" subject="矩形" date="D:20240423212158+08'00'" creationdate="D:20240423212157+08'00'"/><square page="550" rect="219.590,314.390,431.890,398.820" color="#007A3B" flags="print" name="61d1fd05-7072-a954-41d8-30da6321458e" title="Guest" subject="矩形" date="D:20240424103710+08'00'" creationdate="D:20240424103709+08'00'"/><square page="557" rect="85.110,480.100,404.280,692.450" color="#007A3B" flags="print" name="d7050c7e-8f60-d01e-2eb3-25dce820b06f" title="Guest" subject="矩形" date="D:20240424110730+08'00'" creationdate="D:20240424110725+08'00'"/><square page="557" rect="84.680,50.380,437.720,292.260" color="#007A3B" flags="print" name="d8062c64-31d2-ff9d-b5be-f146573f5bda" title="Guest" subject="矩形" date="D:20240424111106+08'00'" creationdate="D:20240424111059+08'00'"/><square page="558" rect="12.160,381.400,449.010,630.230" color="#007A3B" flags="print" name="c1da1532-ea30-1cc7-1ff9-54b86474e265" title="Guest" subject="矩形" date="D:20240424111339+08'00'" creationdate="D:20240424111337+08'00'"/><square page="552" rect="9.990,395.020,437.720,607.370" color="#007A3B" flags="print" name="6c9fc169-cea8-7e86-807a-a118f6acc433" title="Guest" subject="矩形" date="D:20240424113226+08'00'" creationdate="D:20240424113223+08'00'"/><square page="552" rect="4.350,158.600,436.850,385.720" color="#007A3B" flags="print" name="c485e353-bc05-ea67-83af-4e0dd358adfd" title="Guest" subject="矩形" date="D:20240424113255+08'00'" creationdate="D:20240424113246+08'00'"/><square page="562" rect="22.040,152.990,418.730,572.910" color="#007A3B" flags="print" name="3fb68813-0078-72e3-f23e-02834000e1ec" title="Guest" subject="矩形" date="D:20240424150722+08'00'" creationdate="D:20240424150709+08'00'"/><square page="563" rect="112.580,535.180,388.950,618.570" color="#007A3B" flags="print" name="c95b09a5-6422-bb04-02eb-d12c57855ebd" title="Guest" subject="矩形" date="D:20240424150940+08'00'" creationdate="D:20240424150935+08'00'"/><underline page="563" rect="47.945,459.242,457.471,498.345" color="#A6A1E6" flags="print" name="ef9db884-ce62-ff0c-9431-7996e154f31d" title="Guest" subject="下划线" date="D:20240424151004+08'00'" creationdate="D:20240424151004+08'00'" coords="69.38050215406466,498.34530065756263,457.47050111290116,497.59256865656675,69.36499875253384,490.42356258504367,457.4549977113703,489.67083058404774,48.47090131801328,483.2552750799821,457.43090041681137,482.46181348871096,48.45449874433187,474.8539568529208,457.41449784312994,474.06049526164975,47.96130166012169,468.13645198699163,425.8657,467.4037000000001,47.94539909470549,459.97513539603005,425.84979743458376,459.2423834090385"><contents>一个发出而没有被接收的信号叫做待处理信号 (pending signal) 。在任何时刻，一种类
型至多只会有一个待处理信号。如果一个进程有一个类型为 K 的待处理信号，那么任何接
下来发送到这个进程的类型为 K 的信号都不会排队等待；它们只是被简单地丢弃。</contents></underline><square page="564" rect="45.860,97.350,380.620,304.640" color="#007A3B" flags="print" name="1891373d-7c8b-ba22-f29e-58786d141e4e" title="Guest" subject="矩形" date="D:20240424165441+08'00'" creationdate="D:20240424165438+08'00'"/><underline page="566" rect="14.980,533.651,425.034,632.320" color="#A6A1E6" flags="print" name="7ea57ce8-1394-83ed-427e-d1645f92ae19" title="Guest" subject="下划线" date="D:20240424170244+08'00'" creationdate="D:20240424170244+08'00'" coords="35.802000407293455,632.3199086137188,424.84500245976795,631.5666598811252,35.78559794752554,623.9186487325935,424.82860000000005,623.1654,15.142401532126192,617.250486298731,359.5332025868135,616.5836275722057,15.126497940603654,609.0886431022614,359.51729899529096,608.421784375736,364.4890684999999,614.8366930999999,369.0914351999999,614.8277552999999,364.4734624999999,606.8601775,369.07582919999993,606.8512397,370.5824006500756,616.5612336237356,424.3424007214399,616.457070248376,370.5664999286358,608.4008633753596,424.32650000000007,608.2967,15.113400759508139,602.3600890163652,425.03400297755314,601.5671250881743,15.096997479318102,593.9584089190371,425.01759969736315,593.1654449908461,15.407329,583.9383898,23.7886102,583.9221366,15.395611000000002,577.9118782,23.776892200000002,577.8956250000001,24.43380288948884,587.2330829074849,424.03380528697323,586.4601133146091,24.417894038638867,579.0685405844731,424.0178964361233,578.2955709915972,15.054307960370824,572.1237853223932,424.9643021881134,571.3260229562324,15.0383957315605,563.957509404645,424.94838995930303,563.159747038484,15.255701269327114,557.489950143159,424.9457019785882,556.6964134232762,15.239298399674917,549.0884803213106,424.92929910893605,548.2949436014278,14.995699999999998,542.1197000000001,174.1157,541.8109000000001,14.9798,533.9596999999999,174.09980000000002,533.6508999999999"><contents>当内核把进程 p 从内核模式切换到用户模式时（例如，从系统调用返回或是完成了一
次上下文切换），它会检查进程 p 的未被阻塞的待处理信号的集合 (pending &amp; ~blocked) 。
如果这个集合为空（通常情况下），那么内核将控制传递到 p 的逻辑控制流中的下一条指令
([ next) 。然而，如果集合是非空的，那么内核选择集合中的某个信号 k(通常是最小的 k),
并且强制 p 接收信号 k 。 收到这个信号会触发进程采取某种行为 。 一旦进程完成了这个行
为，那么控制就传递回 p 的逻辑控制流中的下一条指令([next) 。每个信号类型都有一个预
定义的默认行为，是下面中的一种：</contents></underline><square page="567" rect="54.200,260.480,443.160,393.300" color="#007A3B" flags="print" name="927647fe-e0eb-8d6f-6358-fb1cdca89752" title="Guest" subject="矩形" date="D:20240424173821+08'00'" creationdate="D:20240424173819+08'00'"/><square page="569" rect="66.850,47.650,442.740,482.370" color="#007A3B" flags="print" name="f893a752-c227-76ad-3a10-826b45a48dc3" title="Guest" subject="矩形" date="D:20240425090514+08'00'" creationdate="D:20240425090511+08'00'"/><underline page="573" rect="43.956,254.848,451.761,277.835" color="#A6A1E6" flags="print" name="91d3b62d-be64-85da-9a0b-b65b42e69451" title="Guest" subject="下划线" date="D:20240425211341+08'00'" creationdate="D:20240425211341+08'00'" coords="285.3057031390294,277.8354109736002,451.7605001767818,277.5123907257339,285.28979934129904,269.67346194971424,451.7445963790515,269.35044170184796,43.971499999999985,263.4325,263.40680000000003,263.00829999999996,43.9556,255.27249999999992,263.39090000000004,254.84829999999994"><contents>因为 SIGCHLD 信号被 SIGCHLD 处
理程序阻塞了，所以第二个信号就不会被接收。</contents></underline><square page="595" rect="282.450,416.420,469.530,588.830" color="#007A3B" flags="print" name="98d22dba-0b0a-de08-a50a-70870386c883" title="Guest" subject="矩形" date="D:20240427104207+08'00'" creationdate="D:20240427104205+08'00'"/><square page="595" rect="100.880,191.080,422.760,365.320" color="#007A3B" flags="print" name="1870dfc0-db57-b9fe-f762-2e0e08ba11bb" title="Guest" subject="矩形" date="D:20240427104424+08'00'" creationdate="D:20240427104422+08'00'"/><square page="597" rect="138.020,488.040,409.010,633.400" color="#007A3B" flags="print" name="86b331b0-612e-a67e-1339-478a1f0bf52b" title="Guest" subject="矩形" date="D:20240427110035+08'00'" creationdate="D:20240427110032+08'00'"/><square page="598" rect="197.170,460.200,454.400,652.330" color="#007A3B" flags="print" name="fe9f2882-93e3-5841-133a-af8fc39ee40a" title="Guest" subject="矩形" date="D:20240427111316+08'00'" creationdate="D:20240427111313+08'00'"/><square page="598" rect="10.090,54.650,440.640,324.260" color="#007A3B" flags="print" name="043266e9-7e95-2109-6e08-32f3df7e6af2" title="Guest" subject="矩形" date="D:20240427112104+08'00'" creationdate="D:20240427112101+08'00'"/><square page="599" rect="112.800,325.460,417.260,534.550" color="#007A3B" flags="print" name="77b25d5a-b20b-0ac3-6789-1935af1c12ea" title="Guest" subject="矩形" date="D:20240427112452+08'00'" creationdate="D:20240427112445+08'00'"/><square page="599" rect="55.470,51.520,469.070,259.230" color="#007A3B" flags="print" name="94462d41-0529-8d41-f621-8d237b9f78df" title="Guest" subject="矩形" date="D:20240427112727+08'00'" creationdate="D:20240427112722+08'00'"/><square page="600" rect="195.790,324.540,447.520,563.900" color="#007A3B" flags="print" name="8547c084-ec96-f4a9-8d09-b5536daaf18b" title="Guest" subject="矩形" date="D:20240427113121+08'00'" creationdate="D:20240427113118+08'00'"/><square page="601" rect="233.850,491.710,466.780,654.490" color="#007A3B" flags="print" name="66241fbb-5c5c-de47-da94-589928e8a3cb" title="Guest" subject="矩形" date="D:20240427114339+08'00'" creationdate="D:20240427114334+08'00'"/><square page="602" rect="61.750,278.530,397.380,468.260" color="#007A3B" flags="print" name="842fdd43-04b1-beba-6a48-0dc37ef860ac" title="Guest" subject="矩形" date="D:20240428084249+08'00'" creationdate="D:20240428084243+08'00'"/><square page="603" rect="112.040,399.560,398.880,666.470" color="#007A3B" flags="print" name="44215a0d-ad95-12b4-08a5-e5549173932e" title="Guest" subject="矩形" date="D:20240428084716+08'00'" creationdate="D:20240428084714+08'00'"/><square page="603" rect="77.190,43.630,439.210,254.770" color="#007A3B" flags="print" name="ad0bd52a-16a5-ad90-20ef-f71173970904" title="Guest" subject="矩形" date="D:20240428085651+08'00'" creationdate="D:20240428085647+08'00'"/><square page="604" rect="43.570,178.740,413.320,516.120" color="#007A3B" flags="print" name="5cdac951-14f5-c1a7-67e9-3f3af32defcf" title="Guest" subject="矩形" date="D:20240428093123+08'00'" creationdate="D:20240428093119+08'00'"/><square page="605" rect="87.650,211.650,425.270,384.450" color="#007A3B" flags="print" name="788e967e-d8d2-cd44-2b86-7b1f5bebcead" title="Guest" subject="矩形" date="D:20240428095425+08'00'" creationdate="D:20240428095417+08'00'"/><square page="605" rect="251.980,44.700,457.640,112.430" color="#007A3B" flags="print" name="172cacbc-773e-f8c5-d024-86f23b557dfa" title="Guest" subject="矩形" date="D:20240428095810+08'00'" creationdate="D:20240428095809+08'00'"/><square page="606" rect="11.450,316.250,447.680,517.930" color="#007A3B" flags="print" name="5532ebf2-cac3-9d3a-038b-3d726d92e0ee" title="Guest" subject="矩形" date="D:20240428152258+08'00'" creationdate="D:20240428152253+08'00'"/><square page="607" rect="63.240,416.990,447.680,675.930" color="#007A3B" flags="print" name="e1105ca7-72b6-ca75-99b6-95a737c11653" title="Guest" subject="矩形" date="D:20240428152929+08'00'" creationdate="D:20240428152927+08'00'"/><square page="607" rect="125.990,42.710,389.420,215.010" color="#007A3B" flags="print" name="8dd1adb5-7fab-cfa2-0a28-5981a2d87024" title="Guest" subject="矩形" date="D:20240428153911+08'00'" creationdate="D:20240428153909+08'00'"/><underline page="608" rect="54.490,598.848,179.051,610.986" color="#A6A1E6" flags="print" name="1b4df92d-5348-f59c-f6d2-7c5a8c563702" title="Guest" subject="下划线" date="D:20240428163823+08'00'" creationdate="D:20240428163823+08'00'" coords="54.49,610.9855,179.0507,610.9855,54.49,598.8475000000001,179.0507,598.8475000000001"><contents>综合：端到端的地址翻译</contents></underline><square page="612" rect="26.390,365.690,443.700,673.940" color="#007A3B" flags="print" name="ddcfe2b1-2f41-b2b9-f7a7-4d1291cca704" title="Guest" subject="矩形" date="D:20240428164423+08'00'" creationdate="D:20240428164421+08'00'"/><square page="612" rect="26.880,49.190,426.770,360.920" color="#007A3B" flags="print" name="af720068-f3c6-deb3-2cab-bd2fa22dc4f4" title="Guest" subject="矩形" date="D:20240428164953+08'00'" creationdate="D:20240428164946+08'00'"/><square page="613" rect="71.710,380.140,436.720,622.650" color="#007A3B" flags="print" name="9330a423-b6bf-d8f4-3cd7-8ca18759bace" title="Guest" subject="矩形" date="D:20240428165259+08'00'" creationdate="D:20240428165257+08'00'"/><square page="613" rect="41.830,83.680,469.590,335.160" color="#007A3B" flags="print" name="15eb4795-3764-29ca-1528-6b45bc6bb11b" title="Guest" subject="矩形" date="D:20240428165616+08'00'" creationdate="D:20240428165604+08'00'"/><square page="614" rect="19.920,205.130,441.210,482.000" color="#007A3B" flags="print" name="84fb245c-5a6f-3ccd-82f2-332e64533a9d" title="Guest" subject="矩形" date="D:20240428170140+08'00'" creationdate="D:20240428170138+08'00'"/><underline page="615" rect="58.481,525.963,466.949,550.042" color="#A6A1E6" flags="print" name="f5291a62-4d84-3b6a-9f2a-f5cbf839f50f" title="Guest" subject="下划线" date="D:20240429083604+08'00'" creationdate="D:20240429083604+08'00'" coords="58.68159674540341,549.2451808549536,466.9331994878751,550.0423644897731,58.69740084428336,541.0830639650568,466.949003586755,541.8802475998764,58.48089999999999,534.1230999999999,198.8709997725383,534.3974174738887,58.49670114467274,525.9625088272412,198.88680091721108,526.2368263011299"><contents>Linux 的虚拟内存系统做一个描述，使你能够大致了解一个实际的操作系统是如何组织虚
拟内存，以及如何处理缺页的 。</contents></underline><square page="615" rect="257.950,240.720,469.590,538.290" color="#007A3B" flags="print" name="7fd3fb43-70a1-48f1-d40e-9d32535b2e07" title="Guest" subject="矩形" date="D:20240429083729+08'00'" creationdate="D:20240429083724+08'00'"/><square page="616" rect="43.320,399.560,400.870,665.970" color="#007A3B" flags="print" name="b807fcf8-6c9c-f8ad-8f3d-08d0aca345fc" title="Guest" subject="矩形" date="D:20240429090422+08'00'" creationdate="D:20240429090419+08'00'"/><square page="617" rect="111.050,314.400,412.820,558.910" color="#007A3B" flags="print" name="819381b1-640a-94cb-8267-3b886ed1685a" title="Guest" subject="矩形" date="D:20240429092509+08'00'" creationdate="D:20240429092503+08'00'"/><square page="618" rect="30.380,130.930,412.820,338.090" color="#007A3B" flags="print" name="a5312c24-470d-ae2b-0d47-642926da2aab" title="Guest" subject="矩形" date="D:20240429145411+08'00'" creationdate="D:20240429145406+08'00'"/><square page="619" rect="57.270,310.770,476.560,516.440" color="#007A3B" flags="print" name="c7d973c1-688c-f4c3-fb6b-768a7e0dd0ff" title="Guest" subject="矩形" date="D:20240429150811+08'00'" creationdate="D:20240429150808+08'00'"/><square page="620" rect="74.240,184.170,363.900,427.300" color="#007A3B" flags="print" name="5b1a398a-f198-4731-de93-31122898167f" title="Guest" subject="矩形" date="D:20240430155649+08'00'" creationdate="D:20240430155644+08'00'"/><square page="621" rect="131.230,416.400,383.250,592.070" color="#007A3B" flags="print" name="1954f4d1-dccc-6689-671d-ec8cb6293d25" title="Guest" subject="矩形" date="D:20240430160156+08'00'" creationdate="D:20240430160153+08'00'"/><square page="622" rect="268.220,350.150,431.350,590.130" color="#007A3B" flags="print" name="09e3f5dd-8795-edf0-e527-07498a9346f3" title="Guest" subject="矩形" date="D:20240430162350+08'00'" creationdate="D:20240430162344+08'00'"/><square page="624" rect="227.440,307.260,432.400,629.860" color="#007A3B" flags="print" name="2ab9158a-a6da-a680-f16b-544f4bc0c11d" title="Guest" subject="矩形" date="D:20240430170443+08'00'" creationdate="D:20240430170420+08'00'"/><square page="626" rect="33.400,385.110,369.730,425.480" color="#007A3B" flags="print" name="205a51e2-2647-929f-9dbc-edd99d23d3ed" title="Guest" subject="矩形" date="D:20240506083645+08'00'" creationdate="D:20240506083640+08'00'"/><underline page="627" rect="48.107,414.115,429.726,423.015" color="#A6A1E6" flags="print" name="9177059f-234e-2958-654e-c72a63343fb0" title="Guest" subject="下划线" date="D:20240506085755+08'00'" creationdate="D:20240506085755+08'00'" coords="48.1232,423.0151000000001,429.7264,422.27510000000007,48.1073,414.8551,429.7105,414.1151"><contents>一个实际的分配器要在吞吐率和利用率之间把握好平衡，就必须考虑以下几个问题：</contents></underline><underline page="627" rect="196.607,503.870,437.929,512.498" color="#A6A1E6" flags="print" name="a5ebb919-a338-a4a9-f5c5-4263cb33f9df" title="Guest" subject="下划线" date="D:20240506085817+08'00'" creationdate="D:20240506085817+08'00'" coords="196.62289999999996,512.4977000000001,437.9285024549721,512.0312599101615,196.60699750890885,504.33642155325856,437.912599963881,503.86998146341995"><contents>器会把堆组织成一个大的字节数组，还有一个指针 p</contents></underline><square page="627" rect="94.390,85.310,411.840,232.850" color="#007A3B" flags="print" name="7c047e47-2b50-4724-ae6f-5e3a122ac1e0" title="Guest" subject="矩形" date="D:20240506090300+08'00'" creationdate="D:20240506090257+08'00'"/><underline page="627" rect="46.919,56.708,454.245,80.734" color="#A6A1E6" flags="print" name="582774c0-1dff-9369-a3b7-150a71103a2a" title="Guest" subject="下划线" date="D:20240506090546+08'00'" creationdate="D:20240506090546+08'00'" coords="68.56469999999999,80.73419999999999,454.2453000000001,79.98680000000002,68.5488,72.57420000000002,454.2294000000001,71.82680000000005,46.935199999999995,65.65600000000006,453.7352,64.86800000000005,46.9193,57.49599999999998,453.71930000000003,56.70799999999997"><contents>在这种情况中，一个块是由一个字的头部、有效载荷，以及可能的一些额外的埃充组
成的。头部编码了这个块的大小（包括头部和所有的填充），以及这个块是已分配的还是空</contents></underline><underline page="628" rect="14.378,614.677,423.576,638.756" color="#A6A1E6" flags="print" name="9445a0b6-f8e9-b24a-bd08-4995bead8c70" title="Guest" subject="下划线" date="D:20240506090922+08'00'" creationdate="D:20240506090922+08'00'" coords="44.605500000000006,638.0163000000002,423.55949999999996,638.7563000000001,44.62180000000001,629.6162999999999,423.57579999999996,630.3562999999999,14.378398506577216,623.0780696166487,393.82869987038555,623.8181680290586,14.394699999999998,614.6773,393.8450013638083,615.4173984124099"><contents>在这种情况中，我们用其中的最低位（已分配位）来指明这个块是已分配的还是空闲
的。例如，假设我们有一个已分配的块，大小为 24(0xl8)字节。那么它的头部将是</contents></underline><square page="628" rect="20.620,556.290,342.140,611.760" color="#007A3B" flags="print" name="d4108802-dd12-fba4-f48d-07a3b9104c80" title="Guest" subject="矩形" date="D:20240506152738+08'00'" creationdate="D:20240506090938+08'00'"/><square page="628" rect="7.260,388.090,435.950,477.260" color="#007A3B" flags="print" name="64f144cb-7884-1a80-bdcc-cfea432fcc4d" title="Guest" subject="矩形" date="D:20240506091019+08'00'" creationdate="D:20240506091016+08'00'"/><underline page="628" rect="13.238,324.198,424.549,379.560" color="#A6A1E6" flags="print" name="eb2e8b21-fed1-4355-5735-b9571f36d50a" title="Guest" subject="下划线" date="D:20240506091037+08'00'" creationdate="D:20240506091037+08'00'" coords="34.53189999999999,378.79570000000007,424.53350000000006,379.5595,34.5477,370.6357,424.5493000000001,371.39949999999993,14.6402,364.11679999999996,424.3204,364.9163,14.656500000000001,355.7167999999999,424.3367,356.51629999999994,13.949099282386323,349.2357706156673,424.1095999143059,350.0364442572238,13.9649,341.0754,424.12540063191955,341.8760736415565,13.2377156,334.46549999999996,47.401915599999995,334.532343,13.2575804,324.1982999999999,47.421780399999996,324.26514299999997,51.18789902491317,334.4386035891417,406.13849741526354,335.13303490189656,51.203701609649684,326.27726868724505,406.15430000000003,326.97169999999994"><contents>我们称这种结构为隐式空闲链表，是因为空闲块是通过头部中的大小字段隐含地连接着
的。分配器可以通过遍历堆中所有的块，从而间接地遍历整个空闲块的集合。注意，我们需要
某种特殊标记的结束块，在这个示例中，就是一个设置了已分配位而大小为零的终止头部(ter­
minating header) 。（就像我们将在 9.9. 12 节中看到的，设置已分配位简化了空闲块的合并。）</contents></underline><square page="629" rect="48.210,218.730,461.790,308.180" color="#007A3B" flags="print" name="24f20a0c-6b68-a443-10e0-c111540363ff" title="Guest" subject="矩形" date="D:20240506155550+08'00'" creationdate="D:20240506155547+08'00'"/><square page="630" rect="9.290,515.350,435.660,602.190" color="#007A3B" flags="print" name="bbab9430-793f-bf23-a314-651e5d718b50" title="Guest" subject="矩形" date="D:20240506160210+08'00'" creationdate="D:20240506160207+08'00'"/><underline page="630" rect="12.970,123.360,232.810,161.040" color="#A6A1E6" flags="print" name="0ef70fcf-2f1d-80c7-8ed6-3953e8585b20" title="Guest" subject="下划线" date="D:20240507205000+08'00'" creationdate="D:20240507205000+08'00'" coords="145.466,161.03999999999996,232.79999999999998,161.03999999999996,145.466,152.88,232.79999999999998,152.88,12.97,146.15999999999997,232.81,146.15999999999997,12.97,138.24,232.81,138.24,12.97,131.51999999999998,172.8548,131.51999999999998,12.97,123.36000000000001,172.8548,123.36000000000001"><contents>如图 9-39 所示，是
在每个块的结尾处添加一个脚部 (footer, 边界标
记），其中脚部就是头部的一个副本</contents></underline><line page="631" rect="58.540,568.690,79.050,572.150" color="#E44234" flags="print" name="713f8e53-b485-7795-dc93-62515eff26a5" title="Guest" subject="直线" date="D:20240507205906+08'00'" IT="LineArrow" creationdate="D:20240507205901+08'00'" start="78.05,569.6899999999999" end="59.54,571.1499999999999" tail="OpenArrow"/><freetext page="631" rect="34.490,563.510,68.556,578.030" flags="print" name="2bdae7f9-8bd8-9522-8abe-ab8d394c49c5" title="Guest" subject="自由文本" date="D:20240507205917+08'00'" width="0" creationdate="D:20240507205910+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-auto-size-type&quot;:&quot;auto&quot;,&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;前面 \&quot;]&quot;}"/><contents>前面</contents><contents-richtext><body><p><span style="color:#e44234">前面</span><span/></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace xmlns="http://www.w3.org/1999/xhtml"></apref-replace></freetext><freetext page="631" rect="33.040,495.990,67.106,510.510" flags="print" name="8f37ea45-9302-0d2c-e837-bb9ef304d2e4" title="Guest" subject="自由文本" date="D:20240507205930+08'00'" width="0" creationdate="D:20240507205918+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-auto-size-type&quot;:&quot;auto&quot;,&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;后面 \&quot;]&quot;}"/><contents>后面</contents><contents-richtext><body><p><span>后面</span></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace xmlns="http://www.w3.org/1999/xhtml"></apref-replace></freetext><line page="631" rect="57.450,503.340,79.050,505.700" color="#E44234" flags="print" name="e779dc4d-8e6a-6209-49e3-a7ec2544f5f7" title="Guest" subject="直线" date="D:20240507205938+08'00'" IT="LineArrow" creationdate="D:20240507205934+08'00'" start="78.05,504.69999999999993" end="58.45,504.3399999999999" tail="OpenArrow"/><line page="631" rect="59.270,535.650,75.060,537.650" color="#E44234" flags="print" name="58ec46e9-690d-5ae9-503a-6c2cc406324a" title="Guest" subject="直线" date="D:20240507205943+08'00'" IT="LineArrow" creationdate="D:20240507205942+08'00'" start="74.06,536.6499999999999" end="60.27,536.6499999999999" tail="OpenArrow"/><freetext page="631" rect="23.600,528.300,69.665,542.820" flags="print" name="92d1b5e7-1116-b30c-4244-65e2befe465c" title="Guest" subject="自由文本" date="D:20240507205959+08'00'" width="0" creationdate="D:20240507205947+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-auto-size-type&quot;:&quot;auto&quot;,&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;当前块 \&quot;]&quot;}"/><contents>当前块</contents><contents-richtext><body><p><span>当前块</span></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace xmlns="http://www.w3.org/1999/xhtml"></apref-replace></freetext><freetext page="631" rect="290.972,620.000,481,634.520" flags="print" name="725bd571-7fe3-427f-f8be-c488e84c1c54" title="Guest" subject="自由文本" date="D:20240507210045+08'00'" width="0" creationdate="D:20240507210009+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-auto-size-type&quot;:&quot;auto&quot;,&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;当前块从已分配到空闲的合并情况 \&quot;]&quot;}"/><contents>当前块从已分配到空闲的合并情况</contents><contents-richtext><body><p><span>当前块从已分配到空闲的合并情况</span></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace xmlns="http://www.w3.org/1999/xhtml"></apref-replace></freetext><freetext page="630" rect="235.620,84.570,440.370,199.660" flags="print" name="6401ae5a-4548-0581-88ae-a67b2097c4d0" title="Guest" subject="自由文本" date="D:20240507210126+08'00'" width="0" creationdate="D:20240507210123+08'00'" TextColor="#E44234" FontSize="12"><trn-custom-data bytes="{&quot;trn-wrapped-text-lines&quot;:&quot;[\&quot;在这里插入文字 \&quot;]&quot;}"/><contents/><contents-richtext><body><p><span/></p></body></contents-richtext><defaultappearance>0 0 0 rg /Helvetica 12 Tf</defaultappearance><defaultstyle>font: Helvetica 12pt; text-align: left; color: #E44234</defaultstyle><apref-replace xmlns="http://www.w3.org/1999/xhtml"></apref-replace></freetext><square page="630" rect="236.710,47.540,455.990,202.920" color="#007A3B" flags="print" name="d535ef61-be47-33eb-4b92-83faf289296b" title="Guest" subject="矩形" date="D:20240507210128+08'00'" creationdate="D:20240507210127+08'00'"/><square page="631" rect="18.720,321.290,474.230,671.850" color="#007A3B" flags="print" name="4d27c0e2-6536-3cca-649b-8ef71039d0d2" title="Guest" subject="矩形" date="D:20240507210333+08'00'" creationdate="D:20240507210330+08'00'"/></annots><pages><defmtx matrix="1,0,0,-1,0,729.3599999999999"/></pages></xfdf>