<?xml version="1.0" encoding="UTF-8"?><xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve"><fields/><annots><underline page="65" rect="106.992,497.426,523.992,554.285" color="#E44234" flags="print" name="2f213f18-79dc-f751-acd1-3a20fb25b9c9" title="Guest" subject="下划线" date="D:20240717101041+08'00'" creationdate="D:20240717101041+08'00'" coords="106.99218304199222,554.2851661547851,523.9921656669924,554.2851661547851,106.99218304199222,537.1757918676757,523.9921656669924,537.1757918676757,106.99218304199222,534.0351669985351,511.9921661669923,534.0351669985351,106.99218304199222,516.9257927114257,511.9921661669923,516.9257927114257,106.99218304199222,514.535167811035,451.9921686669923,514.535167811035,106.99218304199222,497.42579352392556,451.9921686669923,497.42579352392556"><contents>当遇到像margin、padding这样的属性，还有为元素的四条边
分别指定值的边框属性时，开发者容易弄错这些简写属性的顺
序。这些属性的值是按顺时针方向，从上边开始的。</contents></underline><underline page="71" rect="76.992,612.176,521.156,649.972" color="#E44234" flags="print" name="e3f11439-78d1-3998-9c14-f7b027a4e642" title="Guest" subject="下划线" date="D:20240717101245+08'00'" creationdate="D:20240717101245+08'00'" coords="76.99218429199222,649.9716855678466,521.1562320351562,649.9716855678466,76.99218429199222,630.7016668207641,521.1562320351562,630.7016668207641,76.99218429199222,629.2851630297852,286.99217554199225,629.2851630297852,76.99218429199222,612.1757887426758,286.99217554199225,612.1757887426758"><contents>CSS为网页带来了后期绑定（late-binding）的样式：直到内容和样式
都完成了，二者才会结合起来。</contents></underline><underline page="72" rect="91.992,415.452,515.080,473.722" color="#E44234" flags="print" name="ab541d16-16a4-d5e7-52c1-95fdd3a20b5e" title="Guest" subject="下划线" date="D:20240717101418+08'00'" creationdate="D:20240717101418+08'00'" coords="203.39061652539067,473.7216929115965,515.0800570383302,473.7216929115965,203.39061652539067,454.451674164514,515.0800570383302,454.451674164514,91.99218366699222,454.22169372409655,495.3075963621828,454.22169372409655,91.99218366699222,434.951674977014,495.3075963621828,434.951674977014,91.99218366699222,434.7216945365965,226.99217804199225,434.7216945365965,91.99218366699222,415.45167578951396,226.99217804199225,415.45167578951396"><contents>在CSS中指的是样式能够根据浏览器窗口的大小
有不同的“响应”。这要求有意地考虑任何尺寸的手机、平板设
备，或者桌面屏幕。</contents></underline><underline page="72" rect="91.992,82.452,508.682,140.722" color="#E44234" flags="print" name="aa44891a-a87e-68ea-d29a-4a018e11c3e3" title="Guest" subject="下划线" date="D:20240717101459+08'00'" creationdate="D:20240717101459+08'00'" coords="91.99218366699222,140.72170678659654,508.68162130493175,140.72170678659654,91.99218366699222,121.45168803951401,508.68162130493175,121.45168803951401,91.99218366699222,121.22170759909636,505.3198064450073,121.22170759909636,91.99218366699222,101.95168885201383,505.3198064450073,101.95168885201383,91.99218366699222,101.72170841159641,504.48483897979753,101.72170841159641,91.99218366699222,82.45168966451388,504.48483897979753,82.45168966451388"><contents>CSS支持几种绝对长度单位，最常用、最基础的是像素（px）。
不常用的绝对单位是mm（毫米）、cm（厘米）、in（英寸）、
pt（点，印刷术语，1/72英寸）、pc（派卡，印刷术语，12点）</contents></underline><underline page="74" rect="106.604,612.409,473.315,631.465" color="#E44234" flags="print" name="d56b8113-95dc-54a9-a145-62cff9d9a021" title="Guest" subject="下划线" date="D:20240717101723+08'00'" creationdate="D:20240717101723+08'00'" coords="106.60399372691678,631.4648777135984,473.3153875584761,631.4648777135984,106.60399372691678,612.4086328464886,473.3153875584761,612.4086328464886"><contents>1em等于当前元素的字号，其准确值取决于作用的元素。</contents></underline><underline page="76" rect="76.937,541.949,534.148,601.056" color="#E44234" flags="print" name="4cd49a1b-8112-8e42-2c4c-117fc98ec99a" title="Guest" subject="下划线" date="D:20240717102111+08'00'" creationdate="D:20240717102111+08'00'" coords="76.93680296304977,601.0560443806329,531.1779982944088,601.0560443806329,76.93680296304977,581.999799513523,531.1779982944088,581.999799513523,76.93680296304977,581.0306906150228,534.1476180803725,581.0306906150228,76.93680296304977,561.9744457479129,534.1476180803725,561.9744457479129,76.93680296304977,561.0053368494126,347.64991868333624,561.0053368494126,76.93680296304977,541.9490919823028,347.64991868333624,541.9490919823028"><contents>谈到font-size属性时，em表现得不太一样。之前提到过，当前元素
的字号决定了em。但是，如果声明font-size: 1.2em，会发生什么
呢？一个字号当然不能等于自己的1.2倍。</contents></underline><underline page="78" rect="106.604,194.843,525.233,271.750" color="#E44234" flags="print" name="1f7b5f8d-7cd6-e9a1-c7d4-caa14e613d05" title="Guest" subject="下划线" date="D:20240717102306+08'00'" creationdate="D:20240717102306+08'00'" coords="106.60399372691677,271.750264101708,525.2329713952433,271.750264101708,106.60399372691677,252.69401923459804,525.2329713952433,252.69401923459804,106.60399372691677,251.29322957007503,521.9446644210549,251.29322957007503,106.60399372691677,234.37365983755717,521.9446644210549,234.37365983755717,106.60399372691677,233.18291610868107,525.2329684285241,233.18291610868107,106.60399372691677,214.1266712415711,525.2329684285241,214.1266712415711,106.60399372691677,213.89924211216737,363.7220599452796,213.89924211216737,106.60399372691677,194.8429972450574,363.7220599452796,194.8429972450574"><contents>当用em来指定多重嵌套的元素的字号时，就会产生意外的结果。
为了算出每个元素的准确值，就需要知道继承的字号，如果这个
值是在父元素上用em定义的，就需要知道父元素的继承值，以此
类推，就会沿着DOM树一直往上查找。</contents></underline><underline page="81" rect="76.937,433.664,526.981,472.395" color="#E44234" flags="print" name="6234af64-cedd-aa9a-b9fc-a6aadaa23f34" title="Guest" subject="下划线" date="D:20240717102511+08'00'" creationdate="D:20240717102511+08'00'" coords="76.93680296304977,472.3951097856209,526.981422858187,472.3951097856209,76.93680296304977,452.94774469069245,526.981422858187,452.94774469069245,76.93680296304977,452.7203155612882,512.4418923795038,452.7203155612882,76.93680296304977,433.6640706941783,512.4418923795038,433.6640706941783"><contents>rem是root em的缩写。rem不是相对于当前元素，而是相对于根元素的
单位。不管在文档的什么位置使用rem，1.2rem都会有相同的计算值</contents></underline><underline page="82" rect="76.937,328.567,533.461,365.944" color="#E44234" flags="print" name="4a1c7c80-f6e1-6623-c39f-d8e10f6a4a0d" title="Guest" subject="下划线" date="D:20240717102852+08'00'" creationdate="D:20240717102852+08'00'" coords="76.93680296304977,365.94371717697993,533.4609783669405,365.94371717697993,76.93680296304977,346.88747230987,533.4609783669405,346.88747230987,76.93680296304977,345.48668264534695,447.77668751138737,345.48668264534695,76.93680296304977,328.56711291282903,447.77668751138737,328.56711291282903"><contents>rem设置字号，用px设置边框，用em设置其他大部分属性，尤其是内边
距、外边距和圆角（不过我有时用百分比设置容器宽度）</contents></underline><underline page="82" rect="91.770,183.198,518.627,220.574" color="#E44234" flags="print" name="2ab2e425-81aa-abbb-6665-f4be0ccd1046" title="Guest" subject="下划线" date="D:20240717102915+08'00'" creationdate="D:20240717102915+08'00'" coords="136.27118449078378,220.57448243403212,518.627382985007,220.57448243403212,136.27118449078378,201.51823756692215,518.627382985007,201.51823756692215,91.77039834498328,200.11744790239823,210.43916140045133,200.11744790239823,91.77039834498328,183.19787816988037,210.43916140045133,183.19787816988037"><contents>拿不准的时候，用rem设置字号，用px设置边框，用em设置
其他大部分属性。</contents></underline><underline page="84" rect="76.937,418.310,521.945,455.687" color="#E44234" flags="print" name="f276c9ba-8913-b733-1741-6723f2d1d1c0" title="Guest" subject="下划线" date="D:20240717103343+08'00'" creationdate="D:20240717103343+08'00'" coords="76.93680296304977,455.6868030376851,521.9446644210549,455.6868030376851,76.93680296304977,436.63055817057517,521.9446644210549,436.63055817057517,76.93680296304977,435.22976850605187,432.9430921294539,435.22976850605187,76.93680296304977,418.31019877353395,432.9430921294539,418.31019877353395"><contents>如果你希望默认字号为14px，那么不要将默认字体设置为10px然后再
覆盖一遍，而应该直接将根元素字号设置为想要的值。</contents></underline><underline page="83" rect="76.937,241.790,518.613,298.451" color="#E44234" flags="print" name="12010f63-352f-542b-7c69-0126135d74ad" title="Guest" subject="下划线" date="D:20240717103540+08'00'" creationdate="D:20240717103540+08'00'" coords="268.107663415615,298.4506613891913,518.6128979791165,298.4506613891913,268.107663415615,279.3944165220814,518.6128979791165,279.3944165220814,76.93680296304977,279.1669873926777,514.1077748587932,279.1669873926777,76.93680296304977,260.11074252556773,514.1077748587932,260.11074252556773,76.93680296304977,258.7099528610445,477.4438782752544,258.7099528610445,76.93680296304977,241.7903831285265,477.4438782752544,241.7903831285265"><contents>在响应式网页中，需要习惯“模糊”值。
1.2em到底是多少像素并不重要，重点是它比继承的字号要稍微大一
点。如果在屏幕上的效果不理想，就调整它的值，反复试验。</contents></underline><underline page="86" rect="91.770,361.943,507.760,398.887" color="#E44234" flags="print" name="34536e7a-af9f-4780-2718-f398da600704" title="Guest" subject="下划线" date="D:20240717103720+08'00'" creationdate="D:20240717103720+08'00'" coords="128.0199970595833,398.88749702031305,507.76003883708097,398.88749702031305,128.0199970595833,381.96792728779513,507.76003883708097,381.96792728779513,91.77039834498328,378.8621432547027,373.60871060171985,378.8621432547027,91.77039834498328,361.9425735221848,373.60871060171985,361.9425735221848"><contents>媒体查询，即@media规则，可以指定某种屏幕尺寸或者媒
体类型（比如，打印机或者屏幕）下的样式</contents></underline><underline page="87" rect="76.937,206.932,533.504,244.308" color="#E44234" flags="print" name="81d5adcb-0032-9096-3e40-d639696c6cc6" title="Guest" subject="下划线" date="D:20240717103911+08'00'" creationdate="D:20240717103911+08'00'" coords="106.60399372691678,244.30811264513102,533.5044408014096,244.30811264513102,106.60399372691678,225.25186777802105,533.5044408014096,225.25186777802105,76.93680296304977,223.85107811349803,388.4423059836534,223.85107811349803,76.93680296304977,206.93150838098018,388.4423059836534,206.93150838098018"><contents>靠近样式表顶部的两个媒体查询可以极大减少后续CSS代码中媒体
查询的数量。如果用像素的话，就没有这么容易</contents></underline><underline page="93" rect="140.732,212.557,344.697,240.413" color="#E44234" flags="print" name="8a0a7d07-4203-4e5d-8f25-1c2ed46e0b90" title="Guest" subject="下划线" date="D:20240717104923+08'00'" creationdate="D:20240717104923+08'00'" coords="140.73185938617235,240.41339907652582,344.6967043876368,240.41339907652582,140.73185938617235,212.55718067510156,344.6967043876368,212.55718067510156"><contents>使用calc()定义字号</contents></underline><underline page="95" rect="91.992,479.426,519.492,536.722" color="#E44234" flags="print" name="c1301252-f1c7-0870-5810-ceb6e83121b4" title="Guest" subject="下划线" date="D:20240717105247+08'00'" creationdate="D:20240717105247+08'00'" coords="136.99218179199224,536.7216902865966,519.4921658544923,536.7216902865966,136.99218179199224,517.4516715395141,519.4921658544923,517.4516715395141,91.99218366699222,516.0351677485351,511.9921661669923,516.0351677485351,91.99218366699222,498.9257934614257,511.9921661669923,498.9257934614257,91.99218366699222,496.5351685610351,151.99218116699222,496.5351685610351,91.99218366699222,479.4257942739257,151.99218116699222,479.4257942739257"><contents>一个无单位的0只能用于长度值和百分比，比如内边距、边
框和宽度等，而不能用于角度值，比如度，或者时间相关的值，
比如秒。</contents></underline><underline page="97" rect="76.992,394.676,526.992,470.285" color="#E44234" flags="print" name="266d9db5-e7ca-e4d0-38a3-86e2397670af" title="Guest" subject="下划线" date="D:20240717105751+08'00'" creationdate="D:20240717105751+08'00'" coords="76.99218429199222,470.28516965478514,526.9921655419923,470.28516965478514,76.99218429199222,453.17579536767573,526.9921655419923,453.17579536767573,76.99218429199222,450.78517046728496,526.9921655419923,450.78517046728496,76.99218429199222,433.67579618017555,526.9921655419923,433.67579618017555,76.99218429199222,432.4716946303465,526.9921655419923,432.4716946303465,76.99218429199222,413.201675883264,526.9921655419923,413.201675883264,76.99218429199222,411.78517209228505,226.99217804199225,411.78517209228505,76.99218429199222,394.67579780517565,226.99217804199225,394.67579780517565"><contents>使用无单位的数值时，继承的是声明值，即在每个继承子元素上会重
新算它的计算值。这样得到的结果几乎总是我们想要的。我们可以用
一个无单位的数值给body设置行高，之后就不用修改了，除非有些地
方想要不一样的行高。</contents></underline><underline page="98" rect="76.992,122.202,527.473,161.722" color="#E44234" flags="print" name="65667121-086b-354c-55b6-c1af5bd03e25" title="Guest" subject="下划线" date="D:20240717110043+08'00'" creationdate="D:20240717110043+08'00'" coords="254.47264939697254,161.7217059115966,527.4726380219727,161.7217059115966,254.47264939697254,142.45168716451406,527.4726380219727,142.45168716451406,76.99218429199222,141.47170675534653,373.6816254299317,141.47170675534653,76.99218429199222,122.201688008264,373.6816254299317,122.201688008264"><contents>变量名前面必须有两个连字符（--），用
来跟CSS属性区分，剩下的部分可以随意命名</contents></underline><underline page="106" rect="106.992,533.202,523.638,648.785" color="#E44234" flags="print" name="03afa148-9de8-4dcd-9f0d-e1883750a9bb" title="Guest" subject="下划线" date="D:20240717111019+08'00'" creationdate="D:20240717111019+08'00'" coords="106.99218304199222,648.7851622172851,421.99216991699234,648.7851622172851,106.99218304199222,631.6757879301757,421.99216991699234,631.6757879301757,106.99218304199222,630.4716863803467,523.6376706817629,630.4716863803467,106.99218304199222,611.2016676332642,523.6376706817629,611.2016676332642,106.99218304199222,609.7851638422851,136.99218179199224,609.7851638422851,106.99218304199222,592.6757895551757,136.99218179199224,592.6757895551757,106.99218304199222,590.2851646547851,391.9921711669923,590.2851646547851,106.99218304199222,573.1757903676757,391.9921711669923,573.1757903676757,106.99218304199222,570.7851654672851,286.99217554199225,570.7851654672851,106.99218304199222,553.6757911801757,286.99217554199225,553.6757911801757,106.99218304199222,552.4716896303466,403.6816241799318,552.4716896303466,106.99218304199222,533.2016708832641,403.6816241799318,533.2016708832641"><contents>拥抱相对单位，让网页的结构决定样式的含义。
建议用rem设置字号，但是有选择地用em实现网页组件的简单缩
放。
不用媒体查询也能让整个网页响应式缩放。
使用无单位的值设置行高。
请开始熟悉CSS的一个新特性：自定义属性。</contents></underline><square page="644" rect="64.810,409.180,572.900,693.120" color="#E44234" flags="print" name="f393380d-fd74-1b9f-ccfe-b5bc22b6364f" title="Guest" subject="矩形" date="D:20240724100825+08'00'" creationdate="D:20240724100824+08'00'"/><underline page="650" rect="76.992,404.951,527.820,463.221" color="#E44234" flags="print" name="2518afc4-38fd-594d-62d3-15c3457fde45" title="Guest" subject="下划线" date="D:20240724101507+08'00'" creationdate="D:20240724101507+08'00'" coords="371.9897320004273,463.22145334910624,526.9921655419923,463.22145334910624,371.9897320004273,443.9514346020237,526.9921655419923,443.9514346020237,76.99218429199222,443.72145416160606,527.8198055075073,443.72145416160606,76.99218429199222,424.45143541452353,527.8198055075073,424.45143541452353,76.99218429199222,424.2214549741059,181.99217991699226,424.2214549741059,76.99218429199222,404.95143622702335,181.99217991699226,404.95143622702335"><contents>DOM将整个页面抽象为
一组分层节点。HTML或XML页面的每个组成部分都是一种节点，包
含不同的数据。</contents></underline><underline page="660" rect="76.992,569.426,528.996,607.972" color="#E44234" flags="print" name="d06323b5-877f-6298-2ca7-18af5252aa33" title="Guest" subject="下划线" date="D:20240724101909+08'00'" creationdate="D:20240724101909+08'00'" coords="344.48436064648445,607.9716873178467,528.996075458496,607.9716873178467,344.48436064648445,588.7016685707641,528.996075458496,588.7016685707641,76.99218429199222,586.5351648110351,106.99218304199222,586.5351648110351,76.99218429199222,569.4257905239257,106.99218304199222,569.4257905239257"><contents>&lt;script&gt;元素有下列8个属
性。</contents></underline><underline page="664" rect="76.992,395.426,523.465,453.472" color="#E44234" flags="print" name="3d9c5638-28c0-52d8-5c81-c072ccf59637" title="Guest" subject="下划线" date="D:20240724102112+08'00'" creationdate="D:20240724102112+08'00'" coords="316.9921742919923,453.47169375534645,509.10642128723174,453.47169375534645,316.9921742919923,434.2016750082639,509.10642128723174,434.2016750082639,76.99218429199222,433.97169456784627,523.4648256889648,433.97169456784627,76.99218429199222,414.70167582076374,523.4648256889648,414.70167582076374,76.99218429199222,412.5351720610348,91.99218366699222,412.5351720610348,76.99218429199222,395.4257977739254,91.99218366699222,395.4257977739254"><contents>现代Web应用程序通常将所有
JavaScript引用放在&lt;body&gt;元素中的页面内容后面，如下面的例子所
示</contents></underline><underline page="667" rect="76.992,543.926,524.004,581.285" color="#E44234" flags="print" name="93636c36-9593-d2df-9eed-9e53c8667c05" title="Guest" subject="下划线" date="D:20240724102524+08'00'" creationdate="D:20240724102524+08'00'" coords="166.99218054199224,581.2851650297845,524.0038881665039,581.2851650297845,166.99218054199224,564.1757907426751,524.0038881665039,564.1757907426751,76.99218429199222,561.0351658735345,346.9921730419923,561.0351658735345,76.99218429199222,543.9257915864251,346.9921730419923,543.9257915864251"><contents>默认情况下，以这种方式创建的&lt;script&gt;元素是以异
步方式加载的，相当于添加了async属性</contents></underline><underline page="676" rect="106.992,259.676,526.992,316.535" color="#E44234" flags="print" name="a3a4b130-8ac2-4eef-4cd2-e005254a0d65" title="Guest" subject="下划线" date="D:20240724102748+08'00'" creationdate="D:20240724102748+08'00'" coords="106.99218304199222,316.5351760610351,526.9921655419923,316.5351760610351,106.99218304199222,299.4258017739257,526.9921655419923,299.4258017739257,106.99218304199222,296.2851769047851,526.9921655419923,296.2851769047851,106.99218304199222,279.1758026176757,526.9921655419923,279.1758026176757,106.99218304199222,276.785177717285,211.99217866699223,276.785177717285,106.99218304199222,259.6758034301756,211.99217866699223,259.6758034301756"><contents>可以使用async属性表示脚本不需要等待其他脚本，同时也不阻
塞文档渲染，即异步加载。异步脚本不能保证按照它们在页面中
出现的次序执行</contents></underline><underline page="682" rect="76.992,573.176,530.325,610.972" color="#E44234" flags="print" name="7369601c-745a-6387-40f5-2af4b5102955" title="Guest" subject="下划线" date="D:20240724103033+08'00'" creationdate="D:20240724103033+08'00'" coords="316.9921742919923,610.9716871928466,530.3246854031373,610.9716871928466,316.9921742919923,591.7016684457641,530.3246854031373,591.7016684457641,76.99218429199222,590.2851646547851,136.99218179199224,590.2851646547851,76.99218429199222,573.1757903676757,136.99218179199224,573.1757903676757"><contents>ECMA-262第6版规定的所有关键
字如下：</contents></underline><underline page="687" rect="76.992,549.926,505.992,587.285" color="#E44234" flags="print" name="c1cff856-61f3-a3d5-1b08-f92ec768deb8" title="Guest" subject="下划线" date="D:20240724103233+08'00'" creationdate="D:20240724103233+08'00'" coords="76.99218429199222,587.2850447797897,505.9921664169923,587.2850447797897,76.99218429199222,569.2454947314376,505.9921664169923,569.2454947314376,76.99218429199222,567.0350456235398,505.9921664169923,567.0350456235398,76.99218429199222,549.9256713364304,505.9921664169923,549.9256713364304"><contents>let跟var的作用差不多，但有着非常重要的区别。最明显的区别
是，let声明的范围是块作用域，而var声明的范围是函数作用域</contents></underline><underline page="689" rect="106.992,593.426,520.992,630.785" color="#E44234" flags="print" name="1a6415b3-5a17-258b-8fc3-8b61d66927b9" title="Guest" subject="下划线" date="D:20240724103446+08'00'" creationdate="D:20240724103446+08'00'" coords="106.99218304199222,630.7849229672948,520.9921657919923,630.7849229672948,106.99218304199222,613.6755486801854,520.9921657919923,613.6755486801854,106.99218304199222,610.5349238110449,412.9921702919923,610.5349238110449,106.99218304199222,593.4255495239355,412.9921702919923,593.4255495239355"><contents>与var关键字不同，使用let在全局作用域中声明的变量不会成
为window对象的属性（var声明的变量则会）</contents></underline><underline page="669" rect="76.992,641.202,534.126,699.472" color="#E44234" flags="print" name="aa8d458b-dc96-035e-8f2e-95568b41b237" title="Guest" subject="下划线" date="D:20240724201329+08'00'" creationdate="D:20240724201329+08'00'" coords="140.32470090313726,699.4716835053471,534.125955244751,699.4716835053471,140.32470090313726,680.2016647582645,534.125955244751,680.2016647582645,76.99218429199222,678.7851609672854,526.9921655419923,678.7851609672854,76.99218429199222,661.675786680176,526.9921655419923,661.675786680176,76.99218429199222,660.4716851303467,365.79344225860604,660.4716851303467,76.99218429199222,641.2016663832642,365.79344225860604,641.2016663832642"><contents>，CDATA块表示文档中可以包含任意文本的区块，其内容不
作为标签来解析，因此可以在其中包含任意字符，包括小于号，并且
不会引发语法错误。使用CDATA的格式如下</contents></underline><underline page="668" rect="76.992,328.676,524.484,386.722" color="#E44234" flags="print" name="e6199404-0a14-aa08-b002-011dea78e603" title="Guest" subject="下划线" date="D:20240724201352+08'00'" creationdate="D:20240724201352+08'00'" coords="76.99218429199222,386.72169653659626,520.3198028200075,386.72169653659626,76.99218429199222,367.4516777895137,520.3198028200075,367.4516777895137,76.99218429199222,367.2216973490961,524.4843531464845,367.2216973490961,76.99218429199222,347.95167860201354,524.4843531464845,347.95167860201354,76.99218429199222,345.7851748422846,91.99218366699222,345.7851748422846,76.99218429199222,328.6758005551752,91.99218366699222,328.6758005551752"><contents>避免XHTML中这种语法错误的方法有两种。第一种是把所有小于号
（&lt;）都替换成对应的HTML实体形式（&amp;lt;）。结果代码就是这样
的</contents></underline><underline page="690" rect="124.617,422.621,324.884,451.901" color="#E44234" flags="print" name="cf039b30-cf51-2306-42a5-5f71aff0d9e7" title="Guest" subject="下划线" date="D:20240724202059+08'00'" creationdate="D:20240724202059+08'00'" coords="124.61718230761723,451.9011413582853,324.88365146318074,451.9011413582853,124.61718230761723,438.3714788220213,324.88365146318074,438.3714788220213,124.61718230761723,436.15114201453576,279.8726688386384,436.15114201453576,124.61718230761723,422.62147947827174,279.8726688386384,422.62147947827174"><contents>// name被限制在if {} 块的作用域内
// 因此这个赋值形同全局赋值</contents></underline><underline page="690" rect="121.992,146.426,508.992,183.785" color="#E44234" flags="print" name="1bd5e22a-c852-2b05-5b11-0766dcda81f9" title="Guest" subject="下划线" date="D:20240724202126+08'00'" creationdate="D:20240724202126+08'00'" coords="166.99218054199224,183.78494159229479,508.99216629199236,183.78494159229479,166.99218054199224,166.67556730518538,508.99216629199236,166.67556730518538,121.99218241699222,163.53494243604484,406.9921705419923,163.53494243604484,121.99218241699222,146.42556814893544,406.9921705419923,146.42556814893544"><contents>不能使用let进行条件式声明是件好事，因为条件声
明是一种反模式，它让程序变得更难理解。</contents></underline><underline page="693" rect="106.992,155.426,523.992,213.035" color="#E44234" flags="print" name="11be0b10-42b6-d05a-6ea3-3b60f8b8949e" title="Guest" subject="下划线" date="D:20240724202300+08'00'" creationdate="D:20240724202300+08'00'" coords="106.99218304199222,213.0351803735349,520.9921657919922,213.0351803735349,106.99218304199222,195.9258060864255,520.9921657919922,195.9258060864255,106.99218304199222,192.78518121728496,523.9921656669924,192.78518121728496,106.99218304199222,175.67580693017555,523.9921656669924,175.67580693017555,106.99218304199222,172.53518206103502,406.9921705419923,172.53518206103502,106.99218304199222,155.4258077739256,406.9921705419923,155.4258077739256"><contents>有了let和const，大多数开发者会发现自己不再需要var了。
限制自己只使用let和const有助于提升代码质量，因为变量有
了明确的作用域、声明位置，以及不变的值。</contents></underline><underline page="694" rect="106.992,640.675,526.992,717.785" color="#E44234" flags="print" name="1577c5d4-fbf1-422d-74c3-630676f2c9eb" title="Guest" subject="下划线" date="D:20240724202312+08'00'" creationdate="D:20240724202312+08'00'" coords="106.99218304199222,717.7846793423051,526.9921655419923,717.7846793423051,106.99218304199222,700.6753050551957,526.9921655419923,700.6753050551957,106.99218304199222,697.5346801860552,526.9921655419923,697.5346801860552,106.99218304199222,680.4253058989458,526.9921655419923,680.4253058989458,106.99218304199222,678.034680998555,526.9921655419923,678.034680998555,106.99218304199222,660.9253067114456,526.9921655419923,660.9253067114456,106.99218304199222,657.7846818423051,268.9921762919923,657.7846818423051,106.99218304199222,640.6753075551957,268.9921762919923,640.6753075551957"><contents>使用const声明可以让浏览器运行时强制保持变量不变，也可以
让静态代码分析工具提前发现不合法的赋值操作。因此，很多开
发者认为应该优先使用const来声明变量，只在提前知道未来会
有修改时，再使用let。</contents></underline><underline page="695" rect="76.992,409.676,531.160,447.472" color="#E44234" flags="print" name="a1f3cfe0-5001-bf31-b064-bf4812ed3cec" title="Guest" subject="下划线" date="D:20240724202417+08'00'" creationdate="D:20240724202417+08'00'" coords="76.99218429199222,447.4716940053466,531.1596461183473,447.4716940053466,76.99218429199222,428.20167525826406,531.1596461183473,428.20167525826406,76.99218429199222,426.7851714672851,415.9921701669923,426.7851714672851,76.99218429199222,409.6757971801757,415.9921701669923,409.6757971801757"><contents>因为ECMAScript的类型系统是松散的，所以需要一种手段来确定任意
变量的数据类型。typeof操作符就是为此而生的。</contents></underline><underline page="700" rect="76.992,241.676,532.992,299.285" color="#E44234" flags="print" name="7ab10222-5f1d-a56b-0420-e6dc4e3b5073" title="Guest" subject="下划线" date="D:20240724202511+08'00'" creationdate="D:20240724202511+08'00'" coords="251.01561454101568,299.2849367797945,527.0273255405273,299.2849367797945,251.01561454101568,281.24538673144247,527.0273255405273,281.24538673144247,76.99218429199222,279.0349376235446,532.9921652919923,279.0349376235446,76.99218429199222,261.9255633364352,532.9921652919923,261.9255633364352,76.99218429199222,258.78493846729464,316.9921742919923,258.78493846729464,76.99218429199222,241.67556418018523,316.9921742919923,241.67556418018523"><contents>Boolean()转型函数可以在任意类型的数
据上调用，而且始终返回一个布尔值。什么值能转换为true或false
的规则取决于数据类型和实际的值。</contents></underline><underline page="704" rect="106.992,262.496,534.609,361.222" color="#E44234" flags="print" name="e05d8897-d692-b794-9044-bd44001b78ab" title="Guest" subject="下划线" date="D:20240724202606+08'00'" creationdate="D:20240724202606+08'00'" coords="384.6093589746095,361.22169759909707,534.6093527246095,361.22169759909707,384.6093589746095,341.95167885201454,534.6093527246095,341.95167885201454,106.99218304199222,341.7216984115969,529.4750779385375,341.7216984115969,106.99218304199222,322.45167966451436,529.4750779385375,322.45167966451436,106.99218304199222,321.0351758735352,524.0038881665039,321.0351758735352,106.99218304199222,303.9258015864258,524.0038881665039,303.9258015864258,106.99218304199222,300.78517671728525,488.0038896665039,300.78517671728525,106.99218304199222,283.67580243017585,488.0038896665039,283.67580243017585,106.99218304199222,280.5351775610353,314.003893166504,280.5351775610353,106.99218304199222,262.4956275126833,314.003893166504,262.4956275126833"><contents>如果某个计算得到的数
值结果超出了JavaScript可以表示的范围，那么这个数值会被自动
转换为一个特殊的Infinity（无穷）值。任何无法表示的负数
以-Infinity（负无穷大）表示，任何无法表示的正数以
Infinity（正无穷大）表示。</contents></underline><underline page="705" rect="106.992,464.951,518.118,484.221" color="#E44234" flags="print" name="afe3d0f4-1ed2-751d-ab39-b569d0cacdb2" title="Guest" subject="下划线" date="D:20240724202622+08'00'" creationdate="D:20240724202622+08'00'" coords="106.99218304199222,484.22121247411656,518.1181434117433,484.22121247411656,106.99218304199222,464.951193727034,518.1181434117433,464.951193727034"><contents>有一个特殊的数值叫NaN，意思是“不是数值”（Not a Number）</contents></underline><underline page="712" rect="106.992,642.176,526.992,718.972" color="#E44234" flags="print" name="df826d80-b5c1-abef-0fd1-6e089acdbeae" title="Guest" subject="下划线" date="D:20240724202750+08'00'" creationdate="D:20240724202750+08'00'" coords="106.99218304199222,718.9716826928454,520.3124783203126,718.9716826928454,106.99218304199222,699.7016639457629,520.3124783203126,699.7016639457629,106.99218304199222,698.2851601547846,526.9921655419923,698.2851601547846,106.99218304199222,681.1757858676752,526.9921655419923,681.1757858676752,106.99218304199222,678.7851609672836,526.9921655419923,678.7851609672836,106.99218304199222,661.6757866801742,526.9921655419923,661.6757866801742,106.99218304199222,659.2851617797843,151.99218116699222,659.2851617797843,106.99218304199222,642.1757874926749,151.99218116699222,642.1757874926749"><contents>ECMAScript中的字符串是不可变的（immutable），意思是一旦
创建，它们的值就不能变了。要修改某个变量中的字符串值，必
须先销毁原始的字符串，然后将包含新值的另一个字符串保存到
该变量</contents></underline><underline page="717" rect="106.992,699.701,241.992,718.971" color="#E44234" flags="print" name="8a8848c5-2c69-9416-0b17-33c756a49787" title="Guest" subject="下划线" date="D:20240724203455+08'00'" creationdate="D:20240724203455+08'00'" coords="106.99218304199222,718.970722692886,241.99217741699226,718.970722692886,106.99218304199222,699.7007039458035,241.99217741699226,699.7007039458035"><contents>模板字面量标签函数</contents></underline></annots><pages><defmtx matrix="1,0,0,-1,0,792"/></pages></xfdf>